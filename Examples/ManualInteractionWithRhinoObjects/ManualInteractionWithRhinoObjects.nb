(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     23952,        573]
NotebookOptionsPosition[     18599,        492]
NotebookOutlinePosition[     18965,        508]
CellTagsIndexPosition[     18922,        505]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\[OpenCurlyDoubleQuote]Manual\[CloseCurlyDoubleQuote] Interaction with \
Rhino Objects", "Title",
 CellChangeTimes->{{3.668356590560467*^9, 3.6683566019535503`*^9}, {
  3.668364120250911*^9, 
  3.66836412340201*^9}},ExpressionUUID->"6e6ba443-4ebe-4e79-9d63-\
1d834872572c"],

Cell["How to use NETLink to talk to objects in Rhino.", "Text",
 CellChangeTimes->{{3.668356604964215*^9, 3.6683566218433657`*^9}, {
  3.668357760670825*^9, 3.66835776157559*^9}, {3.731852064695022*^9, 
  3.731852086533577*^9}},ExpressionUUID->"0bfb8b2d-4dfd-4914-80c6-\
a2f2cef0c596"],

Cell[CellGroupData[{

Cell["Example", "Section",
 CellChangeTimes->{{3.6683567442069063`*^9, 3.6683567460008717`*^9}, {
  3.731860163296237*^9, 
  3.731860164003458*^9}},ExpressionUUID->"e703719c-1c4f-4fcb-9298-\
dcc47dd215ae"],

Cell["In Rhino, execute WolframConnect.", "Text",
 CellChangeTimes->{
  3.6683568415958333`*^9, {3.7317607387054586`*^9, 
   3.731760739640416*^9}},ExpressionUUID->"cd9edec1-7b69-4b9f-860c-\
ac377446b98f"],

Cell["Open the file AssortedMeshes.3dm in Rhino.", "Text",
 CellChangeTimes->{{3.6683566493909273`*^9, 3.6683566592502537`*^9}, {
  3.6683567102615876`*^9, 
  3.6683567166575875`*^9}},ExpressionUUID->"3b7a5fe1-ba33-43c5-97fa-\
6424712bb412"],

Cell[CellGroupData[{

Cell["Notebook\[CloseCurlyQuote]s Kernel: RhinoAttach", "Subsection",
 CellChangeTimes->{{3.6683604805074453`*^9, 3.668360482816245*^9}, {
  3.668361256889822*^9, 
  3.66836126010336*^9}},ExpressionUUID->"a8168806-f4d6-45f8-b524-\
dbe6737b88f7"],

Cell["\<\
If you select the menu item Evaluation > Notebook\[CloseCurlyQuote]s Kernel, \
you\[CloseCurlyQuote]ll see that this notebook\[CloseCurlyQuote]s kernel is \
RhinoAttach. If the kernel is set to anything else, you \
won\[CloseCurlyQuote]t be able to communicate with Rhino.\
\>", "Text",
 CellChangeTimes->{{3.6683569338041954`*^9, 3.668356968731476*^9}, {
   3.6683604350672293`*^9, 3.6683604637082453`*^9}, {3.7318516390441847`*^9, 
   3.73185173196155*^9}, 
   3.731859512825778*^9},ExpressionUUID->"335306c3-77a6-43c4-8834-\
a59a1ed6f5c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[".NET Objects", "Subsection",
 CellChangeTimes->{{3.6683604987126455`*^9, 
  3.668360501505045*^9}},ExpressionUUID->"792c841a-be0f-4bef-89ce-\
c7550bc7128f"],

Cell["\<\
The root object for most queries is the active Rhino document. This sets \
\[OpenCurlyQuote]doc\[CloseCurlyQuote] to the active Rhino document object \
(.NET objects are indicated by \[LeftGuillemet] \[RightGuillemet] ):\
\>", "Text",
 CellChangeTimes->{{3.6683573175296545`*^9, 3.6683574060958676`*^9}, {
  3.668364172946048*^9, 
  3.6683641732736416`*^9}},ExpressionUUID->"750f8c06-5ce0-41d5-b4df-\
f80f93045da7"],

Cell[BoxData[
 RowBox[{"doc", "=", "RhinoDoc`ActiveDoc"}]], "Input",
 CellChangeTimes->{{3.668357265662008*^9, 3.6683572686102567`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"60ea30fa-5bad-4314-9c2d-12e590a9f9de"],

Cell[TextData[{
 "You can query any .NET object with ",
 StyleBox["NETTypeInfo", "Input"],
 " to find out what you can do with it. ",
 StyleBox["NETTypeInfo", "Input"],
 " is one of the most useful commands for finding your way around a strange \
set of objects:"
}], "Text",
 CellChangeTimes->{{3.668357350248709*^9, 3.6683573553967094`*^9}, {
  3.6683574121639566`*^9, 3.6683574319125433`*^9}, {3.6683593940922318`*^9, 
  3.668359439798829*^9}},ExpressionUUID->"d44f593a-02c3-4120-8cf3-\
d7bcc9a16e28"],

Cell[BoxData[
 RowBox[{"NETTypeInfo", "[", "doc", "]"}]], "Input",
 CellChangeTimes->{{3.6683593618948636`*^9, 3.6683593660443306`*^9}, {
  3.731851528559374*^9, 3.731851576732607*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"26b873d1-a7c2-4576-b6e3-a11a023882e0"],

Cell[TextData[{
 "That output shows that ",
 StyleBox["doc", "Input"],
 " has an ",
 StyleBox["Objects", "Input"],
 " property. The output of ",
 StyleBox["Objects", "Input"],
 " hints that it returns a table of the objects in the document:"
}], "Text",
 CellChangeTimes->{{3.668359526080447*^9, 3.6683595500727863`*^9}, {
   3.6683595986655397`*^9, 3.668359629489728*^9}, {3.6683641986075544`*^9, 
   3.6683642306337385`*^9}, 3.7318598490501823`*^9, {3.7318605306425605`*^9, 
   3.7318605329935656`*^9}},ExpressionUUID->"4fbde670-cea0-4cce-b7d5-\
25536e080ef8"],

Cell[BoxData[
 RowBox[{"doc", "@", "Objects"}]], "Input",
 CellChangeTimes->{{3.668359462480647*^9, 3.6683595175942106`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"fbd5219b-ebf7-40fe-9d1c-dc6c2f7559a0"],

Cell["\<\
Getting a Wolfram Language list of the .NET objects in the document is a \
little messy. This gets the first object:\
\>", "Text",
 CellChangeTimes->{{3.6683600929818316`*^9, 3.6683601204211764`*^9}, {
  3.668360244063757*^9, 3.668360248665816*^9}, {3.668360578488037*^9, 
  3.6683606155366116`*^9}, {3.668361295108876*^9, 
  3.668361295342861*^9}},ExpressionUUID->"41c35d7a-834c-4ea1-b26f-\
1ecceac64f3b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"enumerator", "=", 
   RowBox[{"doc", "@", 
    RowBox[{"Objects", "@", 
     RowBox[{"GetEnumerator", "[", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"enumerator", "@", 
   RowBox[{"MoveNext", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"enumerator", "@", "Current"}]}], "Input",
 CellChangeTimes->{{3.6683598327962008`*^9, 3.6683598399407716`*^9}, {
   3.668360152758733*^9, 3.668360160277643*^9}, 3.6683602179490223`*^9, {
   3.6683602856534944`*^9, 3.668360298086535*^9}, {3.6683605381481943`*^9, 
   3.668360543857538*^9}, {3.668361299024225*^9, 3.668361302097228*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"750603f8-f9bf-484c-8c0f-9f327fb153cc"],

Cell["But there\[CloseCurlyQuote]s an easier way...", "Text",
 CellChangeTimes->{{3.668364261567747*^9, 
  3.6683642671680036`*^9}},ExpressionUUID->"182a2cdd-3431-40f0-998c-\
6c17090869ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rhino Utilities", "Subsection",
 CellChangeTimes->{{3.668360735770755*^9, 3.66836073797027*^9}, 
   3.731775275946068*^9},ExpressionUUID->"ebe98518-6d9c-42e3-84ba-\
fab58f3bfaa8"],

Cell[TextData[{
 "Because working with enumerators is messy, the function ",
 StyleBox["RhinoDocObjects", "Input"],
 ", which returns the objects in a Rhino document, is included in a \
collection of utilities that eases working with Rhino from ",
 StyleBox["Mathematica.",
  FontSlant->"Italic"],
 " There are several mesh objects in this document:"
}], "Text",
 CellChangeTimes->{{3.668360311689561*^9, 3.668360344558339*^9}, {
  3.668360747673097*^9, 3.6683607915230103`*^9}, {3.668364274874206*^9, 
  3.668364341904708*^9}, {3.731775303807869*^9, 
  3.731775317213749*^9}},ExpressionUUID->"37ba27fb-6be5-4c00-9e8b-\
758500dd02c3"],

Cell[BoxData[
 RowBox[{"objs", "=", 
  RowBox[{"RhinoDocObjects", "[", "doc", "]"}]}]], "Input",
 CellChangeTimes->{{3.668360880424056*^9, 3.668360888145808*^9}, {
  3.6683611264902873`*^9, 3.668361127129871*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"8d642c77-3251-48e5-a736-8958cca730ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting Information About a Rhino Mesh", "Subsection",
 CellChangeTimes->{{3.66836185334874*^9, 
  3.668361864299519*^9}},ExpressionUUID->"76d10529-17f5-472f-9715-\
177c64f464a1"],

Cell[BoxData[
 RowBox[{"meshObj", "=", 
  RowBox[{"objs", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.66836186843336*^9, 3.668361874485927*^9}, {
  3.6684237380855846`*^9, 3.668423763138542*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"55752818-0a0b-4e6e-960c-02933b05ad9f"],

Cell["The mesh object contains one mesh:", "Text",
 CellChangeTimes->{{3.6683619760441904`*^9, 3.668361984717512*^9}, {
  3.7318598914545383`*^9, 
  3.7318598926702414`*^9}},ExpressionUUID->"59486632-f438-4978-8e4b-\
a42159625dc5"],

Cell[BoxData[
 RowBox[{"meshObj", "@", 
  RowBox[{"MeshGeometry", "@", "DisjointMeshCount"}]}]], "Input",
 CellChangeTimes->{{3.6683619180238523`*^9, 3.668361961374655*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"5dea9d7c-1f62-4a65-bf57-f9fdc6969803"],

Cell[TextData[{
 "The utility function ",
 StyleBox["FromRhino", "Input"],
 " attempts to convert whatever object you give as its argument to a Wolfram \
Language object. In this case, it returns a ",
 StyleBox["MeshRegion", "Input"],
 " object:"
}], "Text",
 CellChangeTimes->{{3.6683622414122934`*^9, 
  3.6683623115940657`*^9}},ExpressionUUID->"df402dee-108b-4d5f-a675-\
913dd270cc0b"],

Cell[BoxData[
 RowBox[{"FromRhino", "[", 
  RowBox[{"meshObj", "@", "MeshGeometry"}], "]"}]], "Input",
 CellChangeTimes->{{3.6683622076237764`*^9, 3.668362223956453*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"55fe47b8-116f-4853-87df-dcf35c43aee9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sending a Mesh to Rhino", "Subsection",
 CellChangeTimes->{{3.6683623343694816`*^9, 
  3.668362340110134*^9}},ExpressionUUID->"e1857265-83a0-4c82-99ec-\
fca44ab2d01f"],

Cell[TextData[{
 "The ",
 StyleBox["ToRhino", "Input"],
 " utility does the inverse of ",
 StyleBox["FromRhino", "Input"],
 ": it attempts to create a Rhino object from a Wolfram Language object."
}], "Text",
 CellChangeTimes->{{3.668362350312273*^9, 
  3.6683623835704536`*^9}},ExpressionUUID->"e7fa0069-b52a-427b-bb6c-\
492579b18232"],

Cell[TextData[{
 "Here\[CloseCurlyQuote]s a Wolfram Language mesh object. \
It\[CloseCurlyQuote]s a mesh of a ",
 StyleBox["shell",
  FontSlant->"Italic"],
 ", not a ",
 StyleBox["solid",
  FontSlant->"Italic"],
 ", which is important if you intend to send the object to Rhino to create a \
solid:"
}], "Text",
 CellChangeTimes->{{3.6683624219449778`*^9, 3.668362432692978*^9}, {
  3.6683629002876053`*^9, 3.6683629403937297`*^9}, {3.668423793526563*^9, 
  3.6684237979256506`*^9}},ExpressionUUID->"ebd6cd0d-8db9-4993-82a8-\
116ad1ac24bb"],

Cell[BoxData[
 RowBox[{"wlMesh", " ", "=", " ", 
  RowBox[{"BoundaryMesh", "[", 
   RowBox[{"DiscretizeRegion", "[", 
    RowBox[{
     RowBox[{"Ball", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "2"}], "]"}], ",", 
     RowBox[{"2", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668362574211257*^9, 3.6683625775651493`*^9}, {
  3.6683628204493647`*^9, 3.668362827718732*^9}, {3.668423860791319*^9, 
  3.6684238747995806`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"c5454279-42a4-4974-afe4-28b60a078513"],

Cell[TextData[{
 "To get the mesh object out of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " and into Rhino, first convert it to a Rhino mesh:"
}], "Text",
 CellChangeTimes->{{3.6683623870023217`*^9, 3.668362408950678*^9}, {
  3.6683626191690702`*^9, 3.668362623412162*^9}, {3.668362945822321*^9, 
  3.668362963371646*^9}},ExpressionUUID->"9f1cef78-e9ee-4a7e-a807-\
5f0f549af517"],

Cell[BoxData[
 RowBox[{"rhinoMesh", " ", "=", 
  RowBox[{"ToRhino", "[", "wlMesh", "]"}]}]], "Input",
 CellChangeTimes->{{3.6683624146912565`*^9, 3.6683624172651577`*^9}, {
  3.6683625835397577`*^9, 3.66836258722124*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"ebe76044-258e-4e5a-adea-397da71169b5"],

Cell["Add the object to the Rhino document\[CloseCurlyQuote]s object table:", \
"Text",
 CellChangeTimes->{{3.668362973511274*^9, 
  3.668362986755249*^9}},ExpressionUUID->"7b687eb8-c2f2-416c-8685-\
35d25e34318d"],

Cell[BoxData[
 RowBox[{"doc", "@", 
  RowBox[{"Objects", "@", 
   RowBox[{"Add", "[", "rhinoMesh", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6683627448229885`*^9, 3.6683627462737417`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"7687d06b-2acf-4f99-8cb8-562a97f71d04"],

Cell["\<\
Tell the document to redraw so the newly-added object is visible:\
\>", "Text",
 CellChangeTimes->{{3.668362994243009*^9, 
  3.6683630120108395`*^9}},ExpressionUUID->"43e665ec-7ee6-4ca6-a685-\
8b1e130c7925"],

Cell[BoxData[
 RowBox[{"doc", "@", 
  RowBox[{"Views", "@", 
   RowBox[{"Redraw", "[", "]"}]}]}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"83d66271-2c6b-4e25-84b8-5b9d02a55767"],

Cell[TextData[{
 "In fact, there is also a utility ",
 StyleBox["RhinoShow", "Input"],
 " to add and draw an object, so the preceding code can be expressed more \
succinctly. The function returns a unique id for the object:"
}], "Text",
 CellChangeTimes->{{3.668365660416565*^9, 
  3.6683657679904814`*^9}},ExpressionUUID->"bda24453-0751-474f-ae5e-\
70a4afbd37b4"],

Cell[BoxData[
 RowBox[{"guid", "=", 
  RowBox[{"RhinoShow", "[", "rhinoMesh", "]"}]}]], "Input",
 CellChangeTimes->{{3.6683657066534834`*^9, 3.668365745043764*^9}, 
   3.66842393538765*^9, {3.731860925899886*^9, 3.73186092723595*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"62a2bd89-81a4-4b6f-bc58-fac912b26881"],

Cell[TextData[{
 "You can remove the object from the document and delete it with ",
 StyleBox["RhinoUnshow", "Input"],
 " (you will still see the same object you created above in the document):"
}], "Text",
 CellChangeTimes->{{3.668365775384597*^9, 3.668365814445792*^9}, {
  3.668365858436618*^9, 3.6683658608233414`*^9}, {3.7318609643428755`*^9, 
  3.731861029636854*^9}},ExpressionUUID->"c8518116-e04d-40c1-81f6-\
cd02d0384245"],

Cell[BoxData[
 RowBox[{"RhinoUnshow", "[", "guid", "]"}]], "Input",
 CellChangeTimes->{{3.6683658472361517`*^9, 3.6683658523216143`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"261886df-fecf-42a9-819d-ec009036c4f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RhinoApp`RunScript", "Subsection",
 CellChangeTimes->{{3.6683632578117766`*^9, 
  3.66836326581432*^9}},ExpressionUUID->"6ed6853d-05da-4fdb-8c54-\
86fb84d81de6"],

Cell[TextData[{
 "A very useful (and slow) command for executing arbitrary Rhino commands is ",
 StyleBox["RunScript", "Input"],
 ". It\[CloseCurlyQuote]s useful here."
}], "Text",
 CellChangeTimes->{{3.668363273395677*^9, 
  3.6683633310826263`*^9}},ExpressionUUID->"8d51ea06-1438-45ad-b993-\
37cb1467267e"],

Cell["First load the definition:", "Text",
 CellChangeTimes->{{3.668426389335105*^9, 
  3.668426394248947*^9}},ExpressionUUID->"d187e9f2-d7c4-4604-a6e8-\
73259c514c5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LoadNETType", "[", "\"\<Rhino.RhinoApp\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6684263686038113`*^9, 3.6684263686038113`*^9}, {
  3.6684265087696037`*^9, 3.6684265098772106`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"7b9fb794-3ada-4c31-ab43-53f27d292981"],

Cell["\<\
The mesh doesn\[CloseCurlyQuote]t have surface normals, so its corners appear \
rounded if the view is rendered as a shaded model:\
\>", "Text",
 CellChangeTimes->{{3.6683630277663345`*^9, 3.6683630947034044`*^9}, {
  3.668363335247666*^9, 
  3.6683633428757725`*^9}},ExpressionUUID->"604744b8-0fa6-495c-acd6-\
679caa3f7387"],

Cell[BoxData[
 RowBox[{"RhinoApp`RunScript", "[", 
  RowBox[{
  "\"\<_SetDisplayMode _Viewport=All \\\"Shaded\\\" \>\"", ",", "True"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.668363181655018*^9, 3.668363191841491*^9}, {
   3.6683632229468937`*^9, 3.6683632267843714`*^9}, {3.6683637822347975`*^9, 
   3.668363801266065*^9}, 3.6683644329285464`*^9, {3.668424103151911*^9, 
   3.668424129218217*^9}, 3.6684265928222513`*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"6ffbfe81-c983-44cc-9da2-2e77cad66b43"],

Cell["\<\
(There appears to be a bug here; you may have to evaluate the expression \
multiple times to set the display mode of all objects in all viewports.)\
\>", "Text",
 CellChangeTimes->{{3.668426688340437*^9, 
  3.6684267351086373`*^9}},ExpressionUUID->"1b87b704-df49-4cd0-b9fe-\
cebe94393994"],

Cell["\<\
Render it as a wireframe to eliminate the misleading shading:\
\>", "Text",
 CellChangeTimes->{{3.6683633476179905`*^9, 
  3.6683633610802727`*^9}},ExpressionUUID->"ca7d88ea-fa03-453a-9f84-\
ec89306a9654"],

Cell[BoxData[
 RowBox[{"RhinoApp`RunScript", "[", 
  RowBox[{
  "\"\<_SetDisplayMode _Viewport=All \\\"Wireframe\\\" \>\"", ",", "True"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.668363181655018*^9, 3.668363191841491*^9}, {
   3.6683632229468937`*^9, 3.6683632376884212`*^9}, 3.668364441274172*^9, {
   3.6684241058662143`*^9, 3.6684241338823776`*^9}, {3.6684266020728736`*^9, 
   3.6684266036952424`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"4af18463-9b3e-4749-91ae-45c59e57cb5c"],

Cell[TextData[{
 StyleBox["RunScript", "Input"],
 "\[CloseCurlyQuote]s first argument is the same thing you\[CloseCurlyQuote]d \
type after the \[OpenCurlyDoubleQuote]Command:\[CloseCurlyDoubleQuote] prompt \
in Rhino. The second argument determines whether the command is echoed in \
Rhino\[CloseCurlyQuote]s command history above the \
\[OpenCurlyDoubleQuote]Command:\[CloseCurlyDoubleQuote] prompt. Prefixing \
Rhino identifiers with an underscore (_) ensures that the English-name \
command will run regardless of what localized language Rhino is running in."
}], "Text",
 CellChangeTimes->{{3.6683635258901453`*^9, 3.668363580924605*^9}, {
  3.668363815992489*^9, 3.6683638419840884`*^9}, {3.668363921604419*^9, 
  3.66836393509863*^9}, {3.6683639909306717`*^9, 3.6683640289312973`*^9}, {
  3.6683644640023518`*^9, 
  3.6683644667478285`*^9}},ExpressionUUID->"9226981b-de0f-4104-8d75-\
5d84e470790c"],

Cell[TextData[{
 "You can do lots of useful things programmatically using ",
 StyleBox["RunScript", "Input"],
 ". For example, set the standard 4-view arrangement of the document:"
}], "Text",
 CellChangeTimes->{{3.6683635929050207`*^9, 3.6683636101580677`*^9}, {
  3.668363675893783*^9, 3.668363717512886*^9}, {3.6683644891174574`*^9, 
  3.668364495528852*^9}},ExpressionUUID->"cf9f89f7-3150-409c-8993-\
61995a200a55"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RhinoApp`RunScript", "[", 
   RowBox[{"\"\<_4View\>\"", ",", "True"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.6683636621507998`*^9, {3.6683638049163246`*^9, 3.6683638055559*^9}, {
   3.6684265691575065`*^9, 3.668426569641097*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"d9a3afb5-3df9-45f4-93fc-15219ec1585b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"RhinoAttach",
WindowSize->{580, 650},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 279, 5, 156, "Title",ExpressionUUID->"6e6ba443-4ebe-4e79-9d63-1d834872572c"],
Cell[862, 29, 285, 4, 34, "Text",ExpressionUUID->"0bfb8b2d-4dfd-4914-80c6-a2f2cef0c596"],
Cell[CellGroupData[{
Cell[1172, 37, 205, 4, 67, "Section",ExpressionUUID->"e703719c-1c4f-4fcb-9298-dcc47dd215ae"],
Cell[1380, 43, 205, 4, 34, "Text",ExpressionUUID->"cd9edec1-7b69-4b9f-860c-ac377446b98f"],
Cell[1588, 49, 241, 4, 34, "Text",ExpressionUUID->"3b7a5fe1-ba33-43c5-97fa-6424712bb412"],
Cell[CellGroupData[{
Cell[1854, 57, 245, 4, 53, "Subsection",ExpressionUUID->"a8168806-f4d6-45f8-b524-dbe6737b88f7"],
Cell[2102, 63, 552, 10, 78, "Text",ExpressionUUID->"335306c3-77a6-43c4-8834-a59a1ed6f5c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2691, 78, 162, 3, 53, "Subsection",ExpressionUUID->"792c841a-be0f-4bef-89ce-c7550bc7128f"],
Cell[2856, 83, 425, 8, 78, "Text",ExpressionUUID->"750f8c06-5ce0-41d5-b4df-f80f93045da7"],
Cell[3284, 93, 214, 3, 28, "Input",ExpressionUUID->"60ea30fa-5bad-4314-9c2d-12e590a9f9de"],
Cell[3501, 98, 504, 11, 78, "Text",ExpressionUUID->"d44f593a-02c3-4120-8cf3-d7bcc9a16e28"],
Cell[4008, 111, 263, 4, 28, "Input",ExpressionUUID->"26b873d1-a7c2-4576-b6e3-a11a023882e0"],
Cell[4274, 117, 562, 13, 56, "Text",ExpressionUUID->"4fbde670-cea0-4cce-b7d5-25536e080ef8"],
Cell[4839, 132, 203, 3, 28, "Input",ExpressionUUID->"fbd5219b-ebf7-40fe-9d1c-dc6c2f7559a0"],
Cell[5045, 137, 416, 8, 56, "Text",ExpressionUUID->"41c35d7a-834c-4ea1-b26f-1ecceac64f3b"],
Cell[5464, 147, 718, 14, 67, "Input",ExpressionUUID->"750603f8-f9bf-484c-8c0f-9f327fb153cc"],
Cell[6185, 163, 189, 3, 34, "Text",ExpressionUUID->"182a2cdd-3431-40f0-998c-6c17090869ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6411, 171, 185, 3, 53, "Subsection",ExpressionUUID->"ebe98518-6d9c-42e3-84ba-fab58f3bfaa8"],
Cell[6599, 176, 634, 13, 100, "Text",ExpressionUUID->"37ba27fb-6be5-4c00-9e8b-758500dd02c3"],
Cell[7236, 191, 292, 5, 28, "Input",ExpressionUUID->"8d642c77-3251-48e5-a736-8958cca730ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7565, 201, 185, 3, 53, "Subsection",ExpressionUUID->"76d10529-17f5-472f-9715-177c64f464a1"],
Cell[7753, 206, 305, 6, 28, "Input",ExpressionUUID->"55752818-0a0b-4e6e-960c-02933b05ad9f"],
Cell[8061, 214, 231, 4, 34, "Text",ExpressionUUID->"59486632-f438-4978-8e4b-a42159625dc5"],
Cell[8295, 220, 252, 4, 28, "Input",ExpressionUUID->"5dea9d7c-1f62-4a65-bf57-f9fdc6969803"],
Cell[8550, 226, 388, 10, 78, "Text",ExpressionUUID->"df402dee-108b-4d5f-a675-913dd270cc0b"],
Cell[8941, 238, 249, 4, 28, "Input",ExpressionUUID->"55fe47b8-116f-4853-87df-dcf35c43aee9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9227, 247, 173, 3, 53, "Subsection",ExpressionUUID->"e1857265-83a0-4c82-99ec-fca44ab2d01f"],
Cell[9403, 252, 336, 9, 56, "Text",ExpressionUUID->"e7fa0069-b52a-427b-bb6c-492579b18232"],
Cell[9742, 263, 539, 14, 78, "Text",ExpressionUUID->"ebd6cd0d-8db9-4993-82a8-116ad1ac24bb"],
Cell[10284, 279, 812, 21, 67, "Input",ExpressionUUID->"c5454279-42a4-4974-afe4-28b60a078513"],
Cell[11099, 302, 390, 9, 56, "Text",ExpressionUUID->"9f1cef78-e9ee-4a7e-a807-5f0f549af517"],
Cell[11492, 313, 300, 5, 28, "Input",ExpressionUUID->"ebe76044-258e-4e5a-adea-397da71169b5"],
Cell[11795, 320, 213, 4, 34, "Text",ExpressionUUID->"7b687eb8-c2f2-416c-8685-35d25e34318d"],
Cell[12011, 326, 268, 5, 28, "Input",ExpressionUUID->"7687d06b-2acf-4f99-8cb8-562a97f71d04"],
Cell[12282, 333, 217, 5, 34, "Text",ExpressionUUID->"43e665ec-7ee6-4ca6-a685-8b1e130c7925"],
Cell[12502, 340, 186, 4, 28, "Input",ExpressionUUID->"83d66271-2c6b-4e25-84b8-5b9d02a55767"],
Cell[12691, 346, 364, 8, 78, "Text",ExpressionUUID->"bda24453-0751-474f-ae5e-70a4afbd37b4"],
Cell[13058, 356, 313, 5, 28, "Input",ExpressionUUID->"62a2bd89-81a4-4b6f-bc58-fac912b26881"],
Cell[13374, 363, 431, 8, 78, "Text",ExpressionUUID->"c8518116-e04d-40c1-81f6-cd02d0384245"],
Cell[13808, 373, 216, 3, 28, "Input",ExpressionUUID->"261886df-fecf-42a9-819d-ec009036c4f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14061, 381, 167, 3, 53, "Subsection",ExpressionUUID->"6ed6853d-05da-4fdb-8c54-86fb84d81de6"],
Cell[14231, 386, 308, 7, 56, "Text",ExpressionUUID->"8d51ea06-1438-45ad-b993-37cb1467267e"],
Cell[14542, 395, 168, 3, 34, "Text",ExpressionUUID->"d187e9f2-d7c4-4604-a6e8-73259c514c5b"],
Cell[14713, 400, 305, 5, 28, "Input",ExpressionUUID->"7b9fb794-3ada-4c31-ab43-53f27d292981"],
Cell[15021, 407, 335, 7, 56, "Text",ExpressionUUID->"604744b8-0fa6-495c-acd6-679caa3f7387"],
Cell[15359, 416, 504, 9, 48, "Input",ExpressionUUID->"6ffbfe81-c983-44cc-9da2-2e77cad66b43"],
Cell[15866, 427, 299, 6, 78, "Text",ExpressionUUID->"1b87b704-df49-4cd0-b9fe-cebe94393994"],
Cell[16168, 435, 215, 5, 34, "Text",ExpressionUUID->"ca7d88ea-fa03-453a-9f84-ec89306a9654"],
Cell[16386, 442, 487, 9, 48, "Input",ExpressionUUID->"4af18463-9b3e-4749-91ae-45c59e57cb5c"],
Cell[16876, 453, 905, 15, 144, "Text",ExpressionUUID->"9226981b-de0f-4104-8d75-5d84e470790c"],
Cell[17784, 470, 419, 8, 56, "Text",ExpressionUUID->"cf9f89f7-3150-409c-8993-61995a200a55"],
Cell[18206, 480, 353, 7, 28, "Input",ExpressionUUID->"d9a3afb5-3df9-45f4-93fc-15219ec1585b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

