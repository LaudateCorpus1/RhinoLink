(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    175088,       3530]
NotebookOptionsPosition[    167324,       3399]
NotebookOutlinePosition[    167704,       3416]
CellTagsIndexPosition[    167661,       3413]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\[OpenCurlyDoubleQuote]Manual\[CloseCurlyDoubleQuote] Interaction with \
Rhino Objects", "Title",
 CellChangeTimes->{{3.668356590560467*^9, 3.6683566019535503`*^9}, {
  3.668364120250911*^9, 
  3.66836412340201*^9}},ExpressionUUID->"6e6ba443-4ebe-4e79-9d63-\
1d834872572c"],

Cell["How to use NETLink to talk to objects in Rhino.", "Text",
 CellChangeTimes->{{3.668356604964215*^9, 3.6683566218433657`*^9}, {
  3.668357760670825*^9, 
  3.66835776157559*^9}},ExpressionUUID->"0bfb8b2d-4dfd-4914-80c6-\
a2f2cef0c596"],

Cell[CellGroupData[{

Cell["Setup", "Section",
 CellChangeTimes->{{3.6683566297058663`*^9, 
  3.6683566301582727`*^9}},ExpressionUUID->"d8131a66-6b41-4630-8fae-\
8aef994f85c0"],

Cell["In Rhino, execute WolframConnect.", "Text",
 CellChangeTimes->{
  3.6683568415958333`*^9, {3.7317607387054586`*^9, 
   3.731760739640416*^9}},ExpressionUUID->"cd9edec1-7b69-4b9f-860c-\
ac377446b98f"],

Cell["Open the file AssortedMeshes.3dm in Rhino.", "Text",
 CellChangeTimes->{{3.6683566493909273`*^9, 3.6683566592502537`*^9}, {
  3.6683567102615876`*^9, 
  3.6683567166575875`*^9}},ExpressionUUID->"3b7a5fe1-ba33-43c5-97fa-\
6424712bb412"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inspection", "Section",
 CellChangeTimes->{{3.6683567442069063`*^9, 
  3.6683567460008717`*^9}},ExpressionUUID->"e703719c-1c4f-4fcb-9298-\
dcc47dd215ae"],

Cell[CellGroupData[{

Cell["Notebook\[CloseCurlyQuote]s Kernel: RhinoAttach", "Subsection",
 CellChangeTimes->{{3.6683604805074453`*^9, 3.668360482816245*^9}, {
  3.668361256889822*^9, 
  3.66836126010336*^9}},ExpressionUUID->"a8168806-f4d6-45f8-b524-\
dbe6737b88f7"],

Cell["\<\
Note that this notebook\[CloseCurlyQuote]s kernel is RhinoAttach. If the \
kernel is set to anything else, you won\[CloseCurlyQuote]t be able to \
communicate with Rhino. Select Evaluation/Notebook\[CloseCurlyQuote]s \
Kernel/RhinoAttach to set it.\
\>", "Text",
 CellChangeTimes->{{3.6683569338041954`*^9, 3.668356968731476*^9}, {
  3.6683604350672293`*^9, 
  3.6683604637082453`*^9}},ExpressionUUID->"335306c3-77a6-43c4-8834-\
a59a1ed6f5c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[".NET Objects", "Subsection",
 CellChangeTimes->{{3.6683604987126455`*^9, 
  3.668360501505045*^9}},ExpressionUUID->"792c841a-be0f-4bef-89ce-\
c7550bc7128f"],

Cell["\<\
To talk to objects that exist in Rhino, you have to load the corresponding \
types into the .NET runtime. Notice that RhinoDoc`ActiveDoc below is colored \
blue (undefined) until you load the definition of RhinoDoc:\
\>", "Text",
 CellChangeTimes->{{3.668357007123048*^9, 3.6683570103054476`*^9}, {
  3.6683571681196775`*^9, 3.6683571839998665`*^9}, {3.668357224558116*^9, 
  3.6683572595783195`*^9}, {3.6683641549285994`*^9, 
  3.6683641556461763`*^9}},ExpressionUUID->"5903b529-b953-42d7-9802-\
8fdb4a14fe1d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LoadNETType", "[", "\"\<Rhino.RhinoDoc\>\"", "]"}], ";"}]], "Input",\
ExpressionUUID->"13eb9711-861b-47e9-b5c0-836248a3efa7"],

Cell["\<\
The root object for most queries is the active Rhino document. This sets \
\[OpenCurlyQuote]doc\[CloseCurlyQuote] to the active Rhino document object \
(.NET objects are indicated by \[LeftGuillemet] \[RightGuillemet] ):\
\>", "Text",
 CellChangeTimes->{{3.6683573175296545`*^9, 3.6683574060958676`*^9}, {
  3.668364172946048*^9, 
  3.6683641732736416`*^9}},ExpressionUUID->"750f8c06-5ce0-41d5-b4df-\
f80f93045da7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doc", "=", "RhinoDoc`ActiveDoc"}]], "Input",
 CellChangeTimes->{{3.668357265662008*^9, 
  3.6683572686102567`*^9}},ExpressionUUID->"60ea30fa-5bad-4314-9c2d-\
12e590a9f9de"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"NETObject", "[", 
    RowBox[{"Rhino", ".", "RhinoDoc"}], "]"}], "\[RightGuillemet]"}],
  NETLink`Objects`NETObject$108120919506945]], "Output",
 CellChangeTimes->{3.668357310650363*^9, 3.6683656239605336`*^9, 
  3.6684235986881104`*^9},ExpressionUUID->"f23d5dbd-9b50-4cfb-aac8-\
ea6c1ab3764c"]
}, Open  ]],

Cell["\<\
You can query any .NET object with NETTypeInfo to find out what you can do \
with it. NETTypeInfo is one of the most useful commands for finding your way \
around a strange set of objects:\
\>", "Text",
 CellChangeTimes->{{3.668357350248709*^9, 3.6683573553967094`*^9}, {
  3.6683574121639566`*^9, 3.6683574319125433`*^9}, {3.6683593940922318`*^9, 
  3.668359439798829*^9}},ExpressionUUID->"d44f593a-02c3-4120-8cf3-\
d7bcc9a16e28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NETTypeInfo", "[", "doc", "]"}]], "Input",
 CellChangeTimes->{{3.6683593618948636`*^9, 
  3.6683593660443306`*^9}},ExpressionUUID->"26b873d1-a7c2-4576-b6e3-\
a11a023882e0"],

Cell[BoxData[GridBox[{
   {Cell[BoxData[
     RowBox[{"\[FilledCircle]", " ", 
      StyleBox["Type",
       FontSize->18,
       FontWeight->"Bold",
       FontSlant->"Italic"]}]],ExpressionUUID->
     "c771fb18-cf9d-4868-a6fe-e92b22abf25d"]},
   {
    RowBox[{"class", " ", 
     StyleBox["\<\"Rhino.RhinoDoc\"\>",
      FontWeight->"Bold"]}]},
   {GridBox[{
      {
       RowBox[{"Inheritance", ":"}]},
      {
       RowBox[{"   ", "   ", "\<\"System.Object\"\>"}]},
      {
       RowBox[{"   ", "   ", "   ", 
        StyleBox["\<\"Rhino.RhinoDoc\"\>",
         FontWeight->"Bold"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}]},
   {
    RowBox[{"Interfaces", " ", 
     RowBox[{"Implemented", ":", " ", "None"}]}]},
   {"\<\"Assembly-Qualified Name: Rhino.RhinoDoc, RhinoCommon, \
Version=5.1.30000.16, Culture=neutral, PublicKeyToken=552281e97c755530\"\>"},
   {"\<\"Assembly Location: C:\\\\Program Files\\\\Rhinoceros 5.0 \
(64-bit)\\\\System\\\\RhinoCommon.dll\"\>"},
   {""},
   {Cell[BoxData[
     RowBox[{"\[FilledCircle]", " ", 
      StyleBox["Properties",
       FontSize->18,
       FontWeight->"Bold",
       FontSlant->"Italic"]}]],ExpressionUUID->
     "0a9dde29-b477-40dd-ad5a-967e20857824"]},
   {
    RowBox[{"static", " ", "\<\"Rhino.RhinoDoc\"\>", " ", 
     StyleBox["ActiveDoc",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.Tables.BitmapTable\"\>", " ", 
     StyleBox["Bitmaps",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"DateTime\"\>", " ", 
     StyleBox["DateCreated",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"DateTime\"\>", " ", 
     StyleBox["DateLastEdited",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.Tables.DimStyleTable\"\>", " ", 
     StyleBox["DimStyles",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"int\"\>", " ", 
     StyleBox["DistanceDisplayPrecision",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"int\"\>", " ", 
     StyleBox["DocumentId",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.EarthAnchorPoint\"\>", " ", 
     StyleBox["EarthAnchorPoint",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.Tables.FontTable\"\>", " ", 
     StyleBox["Fonts",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.Render.GroundPlane\"\>", " ", 
     StyleBox["GroundPlane",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.Tables.GroupTable\"\>", " ", 
     StyleBox["Groups",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.Tables.HatchPatternTable\"\>", " ", 
     StyleBox["HatchPatterns",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.Tables.InstanceDefinitionTable\"\>", " ", 
     StyleBox["InstanceDefinitions",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"bool\"\>", " ", 
     StyleBox["IsLocked",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"bool\"\>", " ", 
     StyleBox["IsReadOnly",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"bool\"\>", " ", 
     StyleBox["IsSendingMail",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.Tables.LayerTable\"\>", " ", 
     StyleBox["Layers",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.Tables.LightTable\"\>", " ", 
     StyleBox["Lights",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.Tables.LinetypeTable\"\>", " ", 
     StyleBox["Linetypes",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.Tables.MaterialTable\"\>", " ", 
     StyleBox["Materials",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.Geometry.MeshingParameterStyle\"\>", " ", 
     StyleBox["MeshingParameterStyle",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"double\"\>", " ", 
     StyleBox["ModelAbsoluteTolerance",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"double\"\>", " ", 
     StyleBox["ModelAngleToleranceDegrees",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"double\"\>", " ", 
     StyleBox["ModelAngleToleranceRadians",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"int\"\>", " ", 
     StyleBox["ModelDistanceDisplayPrecision",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"double\"\>", " ", 
     StyleBox["ModelRelativeTolerance",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"Rhino.UnitSystem\"\>", " ", 
     StyleBox["ModelUnitSystem",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"bool\"\>", " ", 
     StyleBox["Modified",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"string\"\>", " ", 
     StyleBox["Name",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.Tables.NamedConstructionPlaneTable\"\>", 
     " ", 
     StyleBox["NamedConstructionPlanes",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.Tables.NamedViewTable\"\>", " ", 
     StyleBox["NamedViews",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"string\"\>", " ", 
     StyleBox["Notes",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.Tables.ObjectTable\"\>", " ", 
     StyleBox["Objects",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"double\"\>", " ", 
     StyleBox["PageAbsoluteTolerance",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"double\"\>", " ", 
     StyleBox["PageAngleToleranceDegrees",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"double\"\>", " ", 
     StyleBox["PageAngleToleranceRadians",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"int\"\>", " ", 
     StyleBox["PageDistanceDisplayPrecision",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"double\"\>", " ", 
     StyleBox["PageRelativeTolerance",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"Rhino.UnitSystem\"\>", " ", 
     StyleBox["PageUnitSystem",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"string\"\>", " ", 
     StyleBox["Path",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.Render.RenderEnvironmentTable\"\>", " ", 
     StyleBox["RenderEnvironments",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.Render.RenderMaterialTable\"\>", " ", 
     StyleBox["RenderMaterials",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.Render.RenderSettings\"\>", " ", 
     StyleBox["RenderSettings",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"Rhino.Render.RenderTextureTable\"\>", " ", 
     StyleBox["RenderTextures",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.Tables.StringTable\"\>", " ", 
     StyleBox["Strings",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"string\"\>", " ", 
     StyleBox["TemplateFileUsed",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"bool\"\>", " ", 
     StyleBox["UndoRecordingEnabled",
      FontWeight->"Bold"]}]},
   {
    RowBox[{"\<\"bool\"\>", " ", 
     StyleBox["UndoRecordingIsActive",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.Tables.ViewTable\"\>", " ", 
     StyleBox["Views",
      FontWeight->"Bold"], "  ", 
     RowBox[{"[", 
      RowBox[{"read", " ", "only"}], "]"}]}]},
   {""},
   {Cell[BoxData[
     RowBox[{"\[FilledCircle]", " ", 
      StyleBox["Methods",
       FontSize->18,
       FontWeight->"Bold",
       FontSlant->"Italic"]}]],ExpressionUUID->
     "d1633f2e-4c91-4c82-8386-1579e1089486"]},
   {
    RowBox[{"\<\"bool\"\>", " ", 
     StyleBox["AddCustomUndoEvent",
      FontWeight->
       "Bold"], "\<\"(string description, \
System.EventHandler`1[Rhino.Commands.CustomUndoEventArgs] handler)\"\>"}]},
   {
    RowBox[{"\<\"bool\"\>", " ", 
     StyleBox["AddCustomUndoEvent",
      FontWeight->
       "Bold"], "\<\"(string description, \
System.EventHandler`1[Rhino.Commands.CustomUndoEventArgs] handler, object \
tag)\"\>"}]},
   {
    RowBox[{"\<\"void\"\>", " ", 
     StyleBox["AdjustModelUnitSystem",
      FontWeight->
       "Bold"], "\<\"(Rhino.UnitSystem newUnitSystem, bool scale)\"\>"}]},
   {
    RowBox[{"\<\"void\"\>", " ", 
     StyleBox["AdjustPageUnitSystem",
      FontWeight->
       "Bold"], "\<\"(Rhino.UnitSystem newUnitSystem, bool scale)\"\>"}]},
   {
    RowBox[{"\<\"unsigned\"\>", " ", 
     StyleBox["BeginUndoRecord",
      FontWeight->"Bold"], "\<\"(string description)\"\>"}]},
   {
    RowBox[{"\<\"void\"\>", " ", 
     StyleBox["ClearRedoRecords",
      FontWeight->"Bold"], "\<\"()\"\>"}]},
   {
    RowBox[{"\<\"void\"\>", " ", 
     StyleBox["ClearUndoRecords",
      FontWeight->"Bold"], "\<\"(bool purgeDeletedObjects)\"\>"}]},
   {
    RowBox[{"\<\"Rhino.DocObjects.ObjectAttributes\"\>", " ", 
     StyleBox["CreateDefaultAttributes",
      FontWeight->"Bold"], "\<\"()\"\>"}]},
   {
    RowBox[{"\<\"bool\"\>", " ", 
     StyleBox["EndUndoRecord",
      FontWeight->"Bold"], "\<\"(unsigned undoRecordSerialNumber)\"\>"}]},
   {
    RowBox[{"virtual", " ", "\<\"bool\"\>", " ", 
     StyleBox["Equals",
      FontWeight->"Bold"], "\<\"(object obj)\"\>"}]},
   {
    RowBox[{"static", " ", "\<\"bool\"\>", " ", 
     StyleBox["Equals",
      FontWeight->"Bold"], "\<\"(object objA, object objB)\"\>"}]},
   {
    RowBox[{"static", " ", "\<\"System.Drawing.Bitmap\"\>", " ", 
     StyleBox["ExtractPreviewImage",
      FontWeight->"Bold"], "\<\"(string path)\"\>"}]},
   {
    RowBox[{"\<\"string\"\>", " ", 
     StyleBox["FindFile",
      FontWeight->"Bold"], "\<\"(string filename)\"\>"}]},
   {
    RowBox[{"static", " ", "\<\"Rhino.RhinoDoc\"\>", " ", 
     StyleBox["FromId",
      FontWeight->"Bold"], "\<\"(int docId)\"\>"}]},
   {
    RowBox[{"virtual", " ", "\<\"int\"\>", " ", 
     StyleBox["GetHashCode",
      FontWeight->"Bold"], "\<\"()\"\>"}]},
   {
    RowBox[{"\<\"Rhino.Geometry.MeshingParameters\"\>", " ", 
     StyleBox["GetMeshingParameters",
      FontWeight->
       "Bold"], "\<\"(Rhino.Geometry.MeshingParameterStyle style)\"\>"}]},
   {
    RowBox[{"\<\"System.Collections.Generic.IEnumerable`1[Rhino.Render.\
RenderPrimitive]\"\>", " ", 
     StyleBox["GetRenderPrimitives",
      FontWeight->"Bold"], "\<\"(bool forceTriangleMeshes)\"\>"}]},
   {
    RowBox[{"\<\"System.Collections.Generic.IEnumerable`1[Rhino.Render.\
RenderPrimitive]\"\>", " ", 
     StyleBox["GetRenderPrimitives",
      FontWeight->
       "Bold"], "\<\"(Rhino.DocObjects.ViewportInfo viewport, bool \
forceTriangleMeshes)\"\>"}]},
   {
    RowBox[{"\<\"System.Collections.Generic.IEnumerable`1[Rhino.Render.\
RenderPrimitive]\"\>", " ", 
     StyleBox["GetRenderPrimitives",
      FontWeight->
       "Bold"], "\<\"(Guid plugInId, Rhino.DocObjects.ViewportInfo viewport, \
bool forceTriangleMeshes)\"\>"}]},
   {
    RowBox[{"\<\"Type\"\>", " ", 
     StyleBox["GetType",
      FontWeight->"Bold"], "\<\"()\"\>"}]},
   {
    RowBox[{"\<\"string\"\>", " ", 
     StyleBox["GetUnitSystemName",
      FontWeight->
       "Bold"], "\<\"(bool modelUnits, bool capitalize, bool singular, bool \
abbreviate)\"\>"}]},
   {
    RowBox[{"static", " ", "\<\"bool\"\>", " ", 
     StyleBox["OpenFile",
      FontWeight->"Bold"], "\<\"(string path)\"\>"}]},
   {
    RowBox[{"static", " ", "\<\"bool\"\>", " ", 
     StyleBox["ReadFile",
      FontWeight->
       "Bold"], "\<\"(string path, Rhino.FileIO.FileReadOptions \
options)\"\>"}]},
   {
    RowBox[{"\<\"int\"\>", " ", 
     StyleBox["ReadFileVersion",
      FontWeight->"Bold"], "\<\"()\"\>"}]},
   {
    RowBox[{"static", " ", "\<\"bool\"\>", " ", 
     StyleBox["ReferenceEquals",
      FontWeight->"Bold"], "\<\"(object objA, object objB)\"\>"}]},
   {
    RowBox[{"\<\"void\"\>", " ", 
     StyleBox["SetCustomMeshingParameters",
      FontWeight->
       "Bold"], "\<\"(Rhino.Geometry.MeshingParameters mp)\"\>"}]},
   {
    RowBox[{"virtual", " ", "\<\"string\"\>", " ", 
     StyleBox["ToString",
      FontWeight->"Bold"], "\<\"()\"\>"}]},
   {
    RowBox[{"\<\"bool\"\>", " ", 
     StyleBox["WriteFile",
      FontWeight->
       "Bold"], "\<\"(string path, Rhino.FileIO.FileWriteOptions \
options)\"\>"}]},
   {""},
   {Cell[BoxData[
     RowBox[{"\[FilledCircle]", " ", 
      StyleBox["Events",
       FontSize->18,
       FontWeight->"Bold",
       FontSlant->"Italic"]}]],ExpressionUUID->
     "1453f3db-b588-4b59-b6d0-97d9880b3237"]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocObjects.RhinoObjectEventArgs]\"\
\>", " ", 
     StyleBox["AddRhinoObject",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocObjects.RhinoObjectEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocObjects.\
RhinoTransformObjectsEventArgs]\"\>", " ", 
     StyleBox["BeforeTransformObjects",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocObjects.RhinoTransformObjectsEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocumentOpenEventArgs]\"\>", " ", 
     StyleBox["BeginOpenDocument",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocumentOpenEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocumentSaveEventArgs]\"\>", " ", 
     StyleBox["BeginSaveDocument",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocumentSaveEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocumentEventArgs]\"\>", " ", 
     StyleBox["CloseDocument",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocumentEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocObjects.RhinoObjectEventArgs]\"\
\>", " ", 
     StyleBox["DeleteRhinoObject",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocObjects.RhinoObjectEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocObjects.\
RhinoDeselectAllObjectsEventArgs]\"\>", " ", 
     StyleBox["DeselectAllObjects",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocObjects.RhinoDeselectAllObjectsEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocObjects.\
RhinoObjectSelectionEventArgs]\"\>", " ", 
     StyleBox["DeselectObjects",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocObjects.RhinoObjectSelectionEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocumentEventArgs]\"\>", " ", 
     StyleBox["DocumentPropertiesChanged",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocumentEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocumentOpenEventArgs]\"\>", " ", 
     StyleBox["EndOpenDocument",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocumentOpenEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocumentOpenEventArgs]\"\>", " ", 
     StyleBox["EndOpenDocumentInitialiViewUpdate",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocumentOpenEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocumentSaveEventArgs]\"\>", " ", 
     StyleBox["EndSaveDocument",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocumentSaveEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocObjects.Tables.\
GroupTableEventArgs]\"\>", " ", 
     StyleBox["GroupTableEvent",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocObjects.Tables.GroupTableEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocObjects.Tables.\
InstanceDefinitionTableEventArgs]\"\>", " ", 
     StyleBox["InstanceDefinitionTableEvent",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocObjects.Tables.InstanceDefinitionTableEventArgs e)\"\>", \
"\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocObjects.Tables.\
LayerTableEventArgs]\"\>", " ", 
     StyleBox["LayerTableEvent",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocObjects.Tables.LayerTableEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocObjects.Tables.\
LightTableEventArgs]\"\>", " ", 
     StyleBox["LightTableEvent",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocObjects.Tables.LightTableEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocObjects.Tables.\
MaterialTableEventArgs]\"\>", " ", 
     StyleBox["MaterialTableEvent",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocObjects.Tables.MaterialTableEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocObjects.\
RhinoModifyObjectAttributesEventArgs]\"\>", " ", 
     StyleBox["ModifyObjectAttributes",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocObjects.RhinoModifyObjectAttributesEventArgs e)\"\>", \
"\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocumentEventArgs]\"\>", " ", 
     StyleBox["NewDocument",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocumentEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocObjects.RhinoObjectEventArgs]\"\
\>", " ", 
     StyleBox["PurgeRhinoObject",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocObjects.RhinoObjectEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.RhinoDoc+\
RenderContentTableEventArgs]\"\>", " ", 
     StyleBox["RenderEnvironmentTableEvent",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.RhinoDoc+RenderContentTableEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.RhinoDoc+\
RenderContentTableEventArgs]\"\>", " ", 
     StyleBox["RenderMaterialsTableEvent",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.RhinoDoc+RenderContentTableEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.RhinoDoc+\
RenderContentTableEventArgs]\"\>", " ", 
     StyleBox["RenderTextureTableEvent",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.RhinoDoc+RenderContentTableEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocObjects.\
RhinoReplaceObjectEventArgs]\"\>", " ", 
     StyleBox["ReplaceRhinoObject",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocObjects.RhinoReplaceObjectEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocObjects.\
RhinoObjectSelectionEventArgs]\"\>", " ", 
     StyleBox["SelectObjects",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocObjects.RhinoObjectSelectionEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.RhinoDoc+TextureMappingEventArgs]\"\
\>", " ", 
     StyleBox["TextureMappingEvent",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.RhinoDoc+TextureMappingEventArgs e)\"\>", "\<\"]\"\>"}]},
   {
    RowBox[{
    "static", " ", "event", 
     " ", "\<\"System.EventHandler`1[Rhino.DocObjects.RhinoObjectEventArgs]\"\
\>", " ", 
     StyleBox["UndeleteRhinoObject",
      FontWeight->
       "Bold"], "\<\"  [arguments to delegate: \"\>", "\<\"(object sender, \
Rhino.DocObjects.RhinoObjectEventArgs e)\"\>", "\<\"]\"\>"}]}
  },
  GridBoxAlignment->{
   "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
    "RowsIndexed" -> {}},
  GridBoxItemSize->{
   "Columns" -> {{All}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.2}}, 
    "RowsIndexed" -> {}}]], "Output",
 CellChangeTimes->{3.6683593668243055`*^9},
 AutoSpacing->False,ExpressionUUID->"743dd139-4018-49a2-9343-c60c5b483f09"]
}, Open  ]],

Cell["\<\
That output shows that \[OpenCurlyQuote]doc\[CloseCurlyQuote] has an Objects \
propery. The output of Objects hints that it returns a table of the objects \
in the document:\
\>", "Text",
 CellChangeTimes->{{3.668359526080447*^9, 3.6683595500727863`*^9}, {
  3.6683595986655397`*^9, 3.668359629489728*^9}, {3.6683641986075544`*^9, 
  3.6683642306337385`*^9}},ExpressionUUID->"4fbde670-cea0-4cce-b7d5-\
25536e080ef8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doc", "@", "Objects"}]], "Input",
 CellChangeTimes->{{3.668359462480647*^9, 
  3.6683595175942106`*^9}},ExpressionUUID->"fbd5219b-ebf7-40fe-9d1c-\
dc6c2f7559a0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"NETObject", "[", 
    RowBox[{"Rhino", ".", "DocObjects", ".", "Tables", ".", "ObjectTable"}], 
    "]"}], "\[RightGuillemet]"}],
  NETLink`Objects`NETObject$973088325894145]], "Output",
 CellChangeTimes->{{3.6683594931962795`*^9, 3.6683595181869993`*^9}, 
   3.6684236131488466`*^9, 
   3.6684236436770678`*^9},ExpressionUUID->"da8ed3d1-9ef3-48bd-bd7f-\
e7c39930431b"]
}, Open  ]],

Cell["\<\
Getting a Wolfram Language list of the .NET objects in the document is a \
little messy. This gets the first object:\
\>", "Text",
 CellChangeTimes->{{3.6683600929818316`*^9, 3.6683601204211764`*^9}, {
  3.668360244063757*^9, 3.668360248665816*^9}, {3.668360578488037*^9, 
  3.6683606155366116`*^9}, {3.668361295108876*^9, 
  3.668361295342861*^9}},ExpressionUUID->"41c35d7a-834c-4ea1-b26f-\
1ecceac64f3b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"enumerator", "=", 
   RowBox[{"doc", "@", 
    RowBox[{"Objects", "@", 
     RowBox[{"GetEnumerator", "[", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"enumerator", "@", 
   RowBox[{"MoveNext", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"enumerator", "@", "Current"}]}], "Input",
 CellChangeTimes->{{3.6683598327962008`*^9, 3.6683598399407716`*^9}, {
   3.668360152758733*^9, 3.668360160277643*^9}, 3.6683602179490223`*^9, {
   3.6683602856534944`*^9, 3.668360298086535*^9}, {3.6683605381481943`*^9, 
   3.668360543857538*^9}, {3.668361299024225*^9, 
   3.668361302097228*^9}},ExpressionUUID->"750603f8-f9bf-484c-8c0f-\
9f327fb153cc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"NETObject", "[", 
    RowBox[{"Rhino", ".", "DocObjects", ".", "MeshObject"}], "]"}], 
   "\[RightGuillemet]"}],
  NETLink`Objects`NETObject$675394848030721]], "Output",
 CellChangeTimes->{
  3.6684236828162136`*^9},ExpressionUUID->"b6e03bbb-f734-40ed-92e5-\
01489503eebd"]
}, Open  ]],

Cell["But there\[CloseCurlyQuote]s an easier way...", "Text",
 CellChangeTimes->{{3.668364261567747*^9, 
  3.6683642671680036`*^9}},ExpressionUUID->"182a2cdd-3431-40f0-998c-\
6c17090869ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rhino Utilities", "Subsection",
 CellChangeTimes->{{3.668360735770755*^9, 3.66836073797027*^9}, 
   3.731775275946068*^9},ExpressionUUID->"ebe98518-6d9c-42e3-84ba-\
fab58f3bfaa8"],

Cell[TextData[{
 "Because working with enumerators is messy, the function RhinoDocObjects, \
which returns the objects in a Rhino document, is included in a collection of \
utilities that eases working with Rhino from ",
 StyleBox["Mathematica.",
  FontSlant->"Italic"],
 " There are several mesh objects in this document:"
}], "Text",
 CellChangeTimes->{{3.668360311689561*^9, 3.668360344558339*^9}, {
  3.668360747673097*^9, 3.6683607915230103`*^9}, {3.668364274874206*^9, 
  3.668364341904708*^9}, {3.731775303807869*^9, 
  3.731775317213749*^9}},ExpressionUUID->"37ba27fb-6be5-4c00-9e8b-\
758500dd02c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"objs", "=", 
  RowBox[{"RhinoDocObjects", "[", "doc", "]"}]}]], "Input",
 CellChangeTimes->{{3.668360880424056*^9, 3.668360888145808*^9}, {
  3.6683611264902873`*^9, 
  3.668361127129871*^9}},ExpressionUUID->"8d642c77-3251-48e5-a736-\
8958cca730ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"NETObject", "[", 
      RowBox[{"Rhino", ".", "DocObjects", ".", "MeshObject"}], "]"}], 
     "\[RightGuillemet]"}],
    NETLink`Objects`NETObject$344585125494785], ",", 
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"NETObject", "[", 
      RowBox[{"Rhino", ".", "DocObjects", ".", "MeshObject"}], "]"}], 
     "\[RightGuillemet]"}],
    NETLink`Objects`NETObject$849466433208321], ",", 
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"NETObject", "[", 
      RowBox[{"Rhino", ".", "DocObjects", ".", "MeshObject"}], "]"}], 
     "\[RightGuillemet]"}],
    NETLink`Objects`NETObject$889798491373569], ",", 
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"NETObject", "[", 
      RowBox[{"Rhino", ".", "DocObjects", ".", "MeshObject"}], "]"}], 
     "\[RightGuillemet]"}],
    NETLink`Objects`NETObject$126887208681473], ",", 
   InterpretationBox[
    RowBox[{"\[LeftGuillemet]", 
     RowBox[{"NETObject", "[", 
      RowBox[{"Rhino", ".", "DocObjects", ".", "MeshObject"}], "]"}], 
     "\[RightGuillemet]"}],
    NETLink`Objects`NETObject$16085071953921]}], "}"}]], "Output",
 CellChangeTimes->{
  3.668360888785388*^9, {3.668360924882631*^9, 3.66836092740975*^9}, 
   3.668361063187413*^9, 3.6683611292046175`*^9, 
   3.6684237198496523`*^9},ExpressionUUID->"3d5930f0-5a45-4169-a582-\
38b1ecc90a6b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting Information About a Rhino Mesh", "Subsection",
 CellChangeTimes->{{3.66836185334874*^9, 
  3.668361864299519*^9}},ExpressionUUID->"76d10529-17f5-472f-9715-\
177c64f464a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meshObj", "=", 
  RowBox[{"objs", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.66836186843336*^9, 3.668361874485927*^9}, {
  3.6684237380855846`*^9, 
  3.668423763138542*^9}},ExpressionUUID->"55752818-0a0b-4e6e-960c-\
02933b05ad9f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"NETObject", "[", 
    RowBox[{"Rhino", ".", "DocObjects", ".", "MeshObject"}], "]"}], 
   "\[RightGuillemet]"}],
  NETLink`Objects`NETObject$849466433208321]], "Output",
 CellChangeTimes->{
  3.6683618757494783`*^9, {3.668423724435935*^9, 
   3.6684237634817333`*^9}},ExpressionUUID->"b4a9a830-9cac-4d3d-a01e-\
2a6d967c6554"]
}, Open  ]],

Cell["The mesh object contains one mesh:", "Text",
 CellChangeTimes->{{3.6683619760441904`*^9, 
  3.668361984717512*^9}},ExpressionUUID->"59486632-f438-4978-8e4b-\
a42159625dc5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meshObj", "@", 
  RowBox[{"MeshGeometry", "@", "DisjointMeshCount"}]}]], "Input",
 CellChangeTimes->{{3.6683619180238523`*^9, 
  3.668361961374655*^9}},ExpressionUUID->"5dea9d7c-1f62-4a65-bf57-\
f9fdc6969803"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.6683619411889615`*^9, 3.668361962045433*^9}, 
   3.668423726370285*^9, 
   3.668423770688749*^9},ExpressionUUID->"7effc41d-6207-4c7b-aa9a-\
189dbd19b54d"]
}, Open  ]],

Cell["\<\
The utility function FromRhino attempts to convert whatever object you give \
as its argument to a Wolfram Language object. In this case, it returns a \
MeshRegion object:\
\>", "Text",
 CellChangeTimes->{{3.6683622414122934`*^9, 
  3.6683623115940657`*^9}},ExpressionUUID->"df402dee-108b-4d5f-a675-\
913dd270cc0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromRhino", "[", 
  RowBox[{"meshObj", "@", "MeshGeometry"}], "]"}]], "Input",
 CellChangeTimes->{{3.6683622076237764`*^9, 
  3.668362223956453*^9}},ExpressionUUID->"55fe47b8-116f-4853-87df-\
dcf35c43aee9"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     MeshRegion[CompressedData["
1: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
lPAD8yjRM8wPxX9g7sR0cO4kcsGcR+wLcx7xW5hHiX2hH5fvQj/OdHC+ynRw
PsB0cD4g7w703UI/OUcl+rCX4e+mmHuQPmE/JfJC/8j84JyK+cH5sHwX9pIR
ywv7R7Ev7CsdTT/FHF77j72PY/q4j2M6OB9muXA+LPkH5szCZ3JuTHLBfkT0
kJzbExzm9kIf9n0CT87DyV6wpz7TRyfm+cQn7N0k3pPzfOIT9jUiV3K/QHzC
3kroJ+dphA/7X8ZPMW8n/OS83YovnqcxnRTzZ6IDe0PBh/01+xXur8Wv4E4m
5PoK7mQYjvcwDMd7GIHDPFzyGMzDxW9h7xlBHcv7zTPvl70PZblwT810cE8t
+HCnId+FOw3Gx32x6Bn2xUIf9tRCH/bUjI/7TcbHOxChA3cgQgf2ocI/7D2F
f9h7Cv+w15bvwl5b6MMdDvsD3uGIX8Fdk8DhrknowP2S4MP9kvhhcr+p87l9
58P4eOcTQj3Pd3cMx7s7wYd7P+ET7v3ku7BnFz3Dnl3eF9jvi5/Dfl/eF9jr
/VKdLHsouA9kPvE+UOBw98JwvHsRvcEdbNRT12NwB8twvLOKhug+CO7QGB/v
0IQ+3PsJHbhjZHy8YxR+4N6P6eDdqXwX7k4ZjveZTAfvewUf7ntFXrj3Yzp4
HyV+CPdRYke4A5G4hjtY0QPcwTIc7wZFP3A/JnEN92MSR3APLPThHlj0A3ez
/F28wxS9wR2m2B3uT4R/uNMQfuBOQ/iB+7eEXfR9iNCB+xDhB+7WmA7ezQo+
3M0yHO94mQ7egYvfwh240IH7SfFbuOcUOnDPKfLCfZfwA/fkok+4J2c43tEJ
Hbg7knwLd0dS/8B9muQxuE8T/9zVjuqbGcvVHJrnqP5vt9JcWt8FuW8VNiF+
rld5IN52s3V/GF83sVr5Vb03aE/Edw5Ah++Lgh4jFZ7/3ntEh+fJTl+yz9o5
zU14NOlz9f5644qbW99dpuurk80s+s6bn1EftLlbS5OfqNFztB+ekZVv0q/p
76w8IN/t+Yl9V8x3XAuvpD3wjD15JtzRcHfEO44Fv7KE/GvQ/YUmPzV0qN4q
HppnwgPNpz9ikGPxeS7p36us+2y5Qd+r7kN+2vegqtNFn6y3fw5V/a7obYH+
LtjL+9XrOaa8orfuZC9vzuV0h8/0X1qh6reEvG+Q/sMt36wrMuiEGzdtKUpB
J3zkkm+KUuD7My9TeQD5D/97lap3UQ/RuC6qv0A9uINGq7hL6LNyzw8Kf/mA
Hyw+X5xrxTvjB1eQHRP467fVtfB5H6G/i/4WP/HhCfXd4izVV8r91cSX6ph0
xE8eJ7kwLuJZWj8QF+Ea0jPGl6/thX4b9tTxC34YHc6jOdqkRc1NPr2ZmXQ3
OI/yv9jxK7IL5odwJNk3EY/HSf8YFzXxQvOu27pY93LRpEyrH5E7kA9Xk31A
nzX2ornYwd9Yd3FRu9Kdyn9uGbXbhAeTyS5x+8W5lryVe9ScE+m4b28/XZ6C
H0frDelHF9J3UZ/BcaKP8vo9nlVz87joqAV3juh+vfF6+875pkGU31fPrGvp
Z2PvzFR6CzR+dM/hHBMea32iHoKf9Fzt3OUnTLn87sSnO7DDIRPuDZ+9JxUc
8za/L1GHPyo/R/7j9UuPpdJzvLi+mgMn9NCR6KBc3oiBNB/QdOTO6j9EJyHX
2gvVPD/66Q7rDscZSX1oeL2XY8GPdKY9QYMp+SY8ekDPzfLTMky4/xnRdyYP
P1ZkwL0BD+5LBY/uLaY6E/ivsQvtrzt+ctrEDypaqb4M+Yz/nqPqe+TTKyF7
ob/FQwk/QX8/0Ue5oluIf9Sb99IG2pvvprpF7kZGjqJ+PX1ltgn3OrY9x7QX
w2v0SXOgV49lWPB2pd+nqmfCRnvLlN52tU6zvqv5QXiNXLvKU9FfvfI7U/+C
X0H4yH90EfHjHOxn7anjFzco/oLsA/adyd+IT9RPvJvqNKTjdSxW/Hszb88z
6ThLl1N+SKe6lOHBoFvtPQLXOUsIP5xL9afwM27XqypO71+WZuF3oO8i3Ft0
gXoX4qx+5Nf8TiH/vDd5fPpeS5/MZ3UPdT+A/ATOtQqOcoUlxCfqIQ5Jz8hP
tID4RP0n/JP3ROifDEf/4b0k+qeGJ/yZ9YD+xntbrM+ZPvo571XRzxkf/Za/
i37L+Oi3vN+EfCh7H/Rb1g/kQ9n7QP6UPQvkZ9lPwbsj83nIqwa+lQ+FPuRV
hmMelnsDyHsy74U8LN+FfCtwyJNCH/Kw0If8KXxCPSBzMKgHZF8A77vM26FO
kH0Z1AmCD++CwOF9l/k2vKeyX4A64cweyn73hQ68+/JdeN8FH+oW0Q/UY4IP
9YPwA3Wv0IG6VPChLhV9Ql0qdoG6VOSCOlP4hH6B4Vh/Chz6SpmDQX0r/ENd
KvJCHy10oF419GP1uTKHh76S4ViHG/qx+izZ+0BfyXDsZxmOfaXwA32f4EMf
JHxCXybfhbmH4ENfI/ShDxJ8mG/InA3mDDIXgjkDw3FeIfjQp8u8C+YJMk+G
/lrowDxB5njQpwsd6IsFH/pQwYf+UeaW0OeemY/Z8yiRC/6/Nu4v4nZf0zxK
961RdTXBdT/iD3PP9LP/A4fLkO8=
      "], {
       Polygon[CompressedData["
1:eJxNm3n8ldP2x8/3uRkiUkJyu0pEpiRFCQ2mRBnSqCSVitAkQ2iSVJooTTRq
nksTpVnJkHIlUyS5PxcX3RtluL/1br/Py/3j82q1W3s/a6+9znk++7NOZVs/
cOv9WS6Xe/6IXO4v8WdBgL9jFwrEcO7IwFGBowOFA8cEjg0UCRwXOD5QNHBC
oFigeODEQInASYGTA6cESgZODZQKnBb4a6B04G+B0wNlAmUDZwTKBc4MnBUo
Hzg7cE6gQuDcwHmB8wMXBC4MVAxcFKgUuDhQOXBJoEqgauDSwGWBaoHqgcsD
NQJXBK4MXBWoGagVqB2oE7g6cE3g2sB1gesDdQM3BOoFbgzcFKgfaBC4OXBL
4NbAbYGGgdsDjQKNA00CTQPNAs0DdwRaBFoG7gy0CtwVaB24O9Am0DbQLnBP
oH2gQ6Bj4N7AfYFOgfsDDwQeDHQOdAl0DXQLdA88FOgReDjwSODRwGOBnoHH
A08Engz0CvQO9An0DfQLPOX++gee9jkDAs+Yp4GBQcY+OPCszxwSGGq8wwLD
fc6IwHPu6fnASHM8KvCCf44OjDHGsYFxgfGBFwMvOW9CYKL/Pikw2bWnBKYa
78uBacY4PTDDnM0MzDLe2YE57mluYJ7/Pj+wILDQeBYFFgeWBF4JLA0sCywP
rAisDLwaeM11VgVWG9vrgTXGvDawztjW59L5bwhszKV62RR4I7A5sCXwprnc
Gngr8LZ7fCfwbmBb4L3Adn12BN43/r8HPgjsDHwY2OV+Pwp8HPgk8Gngs8Du
wOeBL8zVHs+N/X5pXOxxb+CrwL7A14F/BP4v8E3gn4FvA98Fvg/8K/BD4MfA
T4H9gX8H/hM4EPg58EvgYOBQ4NfAb4HfA38E/hvgC6kgkAX+EigUOCJwZOCo
wNGBwoFjAscGigSOCxwfKBo4IVAsUDxwYqBE4KTAyYFTAiUDpwZKBU4L/DVQ
OvC3wOmBMoGygTMC5QJnBs4KlA+cHTgnUCFwbuC8wPmBCwIXBioGLgpUClwc
qBy4JFAlUDVwaeCyQLVA9cDlgRqBKwJXBq4K1AzUCtQO1AlcHbgmcG3gusD1
gbqBGwL1AjcGbgrUDzQI3By4JXBr4LZAw8DtgUaBxoEmgaaBZoHmgTsCLQIt
A3cGWgXuCrQO3B1oE2gbaBe4J9A+0CHQMXBv4L6CVBOd4s/7Aw8EHgx0DnQJ
dA10C3QPPOR6PQIPG+MjgUcDjwV6Bh4PPBF4MtDLPfH33vr2CfQN9As8Fejv
Pp4ODAg8ExgYGOS/Dw4869pDAkONfVhguDGOCDxnnp4PjAyMCrwQGO2exgTG
+u/jAuMDLxrPS4EJjk8MTDKOyYEpgamBl41rWmB6QfoMzYg/ZxrXrMBsczMn
MNc/+fs89zHfcfa6ILDQfSwKLDbGJYFXAksdXxZYrv+KwErXfbUg1SnxvRZY
Zc5XB1435jWBtQUpznXmaX1gQ2BjYFPgjYL0fcZ34+awt7jHNwNbjfmtwNuB
dwLvBrYF3gtsD+wIvB/4e+CDwM7Ah4FdgY8CHwc+CXxakDgDHAM+8Fn8fXfg
84LEPeAtcIAv4u97jPPLwN7AV4F9ga8D/yD3gW8C/wx8G/gu8H3gX4EfAj8W
JF4El4An/BR/2R/4d0HiGGVyiZ/0yiXuBAf4T/zbgcDPBYlHwZ3gJ3AVuAfv
YDgVfKmG3/db/a6H/8Cv4EXwFngOfADeBYeBS8C14F3wKLgQ72ve77y7e+cS
P4ELwYvgEPA0OBUcDM4Dp4K7wIXgY/AAuBk8DT4BZ4Ob1col3gWngtPAZ+An
cCM4D9wJvgFPg5vBaeB1cB44zS+x/4OBQwWJ28BD4DFwEngUPAa+1MK5cJ6G
Pguu0s744SqPmTe4WSvXh0fVdy9woSfcS81c4irsBV4EV4M/wLVquy84yVjX
hTfBW+BM8A14D+9f3tH9fQbv6A3GCgfr4F7gZteYE7jNJvcAh3nePcCdRhgf
fGmgccA9pvhv8JNhrguPgofAV+A+Q4wP/rPSZ/BZe9n44FqjjAOOerN7gUvA
h+AJcK3B5o53+jL3MzGXuAmxwsFm6wdHmm6s8Ch4DTzp13jub363wBNG+2y4
ynzjho9NMr/POI/zgF8tcZ9wGLgQ71w4FTwKHsK7hu9e3lXwKDgPHAb+A7+C
e8C1vsglDgA3g/PAMeA5cDZ4CLwLDgbfhmPAT+AAn+cSF4JvwFvgKrzf4XJr
connw6PgVHAPOBL8H47BXQAOD3+Az8OveA/CweBj8Bk4EvwEHgKHhDfCheAt
8Bw4CdwMHgWXgC/BkeAh8A04Ce9f+Ak8hHf62lzinHA2uAc8Cr4B/4HPwBng
V3AhuAfvaLgKfAMOxhcYfOb3wB8F6f0CF+I9Dn+Aa8HH4F1wM7gQXAvOA6eC
n8DB4DxwD3gafAz+AF+Cs8ET4JbwSTgevAvuBG+BI8GLeO/DkeA5cBQ4GzwN
LgRng6fBeXiX8Y7i3QY3g6/CteA8la0NOBK8CI4FR4K3wD/gMHAh3rvwIjgM
/ADuATfiPQ4Hg1/BXeA5cCE4B7wIfgV3gZvB0+BG8C44HjwGfvKUa8Kd4DBw
I7hQc/3hfh1dH15UyTjhYPAcOBncrIF5gCfAm4gfPvOM8cOjehobvKmLMcBD
hvhvcJVHXBdOBSfh8wMX6mF8cCE4Bs/gXT/M+OBdTxgHHLWaexlq7tkP/Afu
xfsdzj/F/cCpBhorHACuxnsZrjTCWOFU8BA4E/z2evcOf3vSZ8Nzxhk33Gyw
+X3QeZwFXKuP++Ruy/ci7w441SL389+C9P3AdwI8ar5rwYVmmS94yxJjgrPB
0+Ae8Ao4D+99+NU09wZ/gG/ADeA4690bL3q4AjwGLjfD/ML94FRwGLgTfAkO
A3eCC8E94EVwIXgFHAw+Bm/hs8n3KpwBDgafhCPxfQuHgavAo/j88j6F18HN
4CFwKnjUYQ0nSzwErgK/glOhgWRZei/znoJTwWHQduBa8CJ0G7gNvAudBz4G
pyqbS9wJLoTOAy/inY4+85dYs5DPg4PB09B84D/wK/SWI7LEnYjtSO2zjRP+
AF+Cg8G70ByOytK6vXKJP8Cj0JrgbPA0NJ+jnct7H04Lv4UfVvF57LdwlrgZ
dhn/zl6OyRJvxD5WG65YJEschtiOyxKHhLMdnyW+BD8pqg/8pIRrneS+ypvz
E5zLeLEscTx4WvEs8UByfqJ2DZ9V0RhKaMNzTsoS72prnNhw3aNdizM62fUL
u+blxlzMf+NMT8kSn2xsPKV8bkltOBJc8tQsnW+pLPHAWsSdJd4IF/1rlvxK
mqsyxlNan6KugU9x/U9x7+X0o2YOc9ssnenpWeKZd/qs0q4Pzy2TpfrhT/5e
xL00Mp6/uS/WLOve4X5n6A9nPsLzIOflssSlWfPMLPFI+NJZWeK0cLnz9aPG
ymeJV2OfrQ2vPidLHLufz2ptbitkid/y3HO1+Y46L0v8Ew7Z13X7WcOMw5/P
z5IGl1+b2udzcUGWuBzPvVC7i/HAnx/Wp7f+fCbg93wuymtTkxX176ZPA/3J
2YW5P+u8uXOpcTg9nwXO8FTPkXHuA9Q/nwW4O5+Li5wLN6ZOK1m3F+t/rvGc
pX9Ffaj5Slni/fBk6v+R/Fztx4yzuudbSruG6xB//vPSxtioh56OV9Z+wrns
hZqn/ju55iVZ4qlwVGrwZOuQz0JN/S/Rrq0P9xzqlnrkXnS1uWJuLcfxOaxv
Z+nuwXiVLN0feIdVdbyVNcM4dUhN3aXdQ5u6olbv8VmXanNfyKznO51LPI2d
y12LOrxB+2HtutbDzdr1PAvuMA2tma7OvcxckR/qsLNzqW3uStytqjmOXd25
3Fku14d7CvXOfayLz22gTf1w1+IzUkObu8kVWbpHjbUexlgnVxond5YKfq4f
9qyHWzPE/LTnflWW7m/cm2pqU6u19Of+VVt/7ip1rAfuPrzcrvZ9f02W7lGj
zD/3rsM9Am3uNddl6f7Gne36LN3ruBOd6dxWxv+S8VTRh3Os6zj3sRuydFfk
LtbZvJHbelm603H3I6/jHCdv3An7exbjzT97/9J8Vjc2au9Gx7lP3uTcZZ4X
628x/xPNM3uZ5x7rOz4pl+5M3LWamcM55pMcTjOfDRyfa84ne6Y36zPd/c4y
57dk6W7JXfFW/bknk/8XzMltxjPfnL9pnhtqb/Vc9nhet2dJZ+FcGvks7rqN
XZN77HjzuUX/8dpNnLvN/K/Tbpqle9lu88kdlhw2077eM11jntnL2+btJudy
js31aWZuV1sDnMMbxnCH4zvNz2JjJodfmNsW2r+6x13mtqX2t57Fa+bzTuPZ
Zx4WmpNW2txb7/JZ3K9bZ+muzb2Y/b3ifjcb5zZz9a75v1ubO36bLN3juBuy
77XuvW2W7trcnduZW+656/T5xDPd7lm3cx3WxOcdn0s8y835PVm6h3Jnb6rN
Oqut1QnW7XLPpX2W7vjc65e6r93W2PvWYTN9dnteTX1WB210APQA7vbc68nr
Ks+as/vA8+2onfd5y/xzJuga3F9WO3en42/9z3l95fi9WdI00C7ucxzNoaXj
1AC18Ln2Lu3p1skhn9VJ+0TvUGgX+5z7qnXF3A+tn4Xas7UXWCeLtUd7pj9b
J9TS986l2Yx2gUZBXheZ2weypIGgUdylzZoPOvdU/Xe45nbt+T530f/UJ1oH
dmftP6xDNA1q7F1rhvrpYpxoHV2ztHf0mW76ozlQOx9ZP8x9z9rers2aH+tD
baPno5dPsebZL+tU9fu8tvWJVoN/d200HOrrWuuwqTY1Rr00sX7w+dQ6pG7R
f6jzh7TreoZHuJemzqU+e2RJz0Fv+cpa3WlNohfh87B2dX32WlePZEkvQlPq
oH2yz9prDd/n+tQ2NUUMR5lbdB7WeTRLGhe61mOO1zTP7OsYa7K48VPL31jn
PR2v4/oHrdvv9fnWzwW604nOPWj9P+54S/2/s66oPXQ2bOrlB2uJGvzBmuR8
0aGomSf0R++idv5rTT7ovojzR9enhlkTnz+syd9d80ntJq5zwDqk7kpZe9Qh
mhvjvbTR/XpnSU9DO6J29lt7fbKky6HRcYZtPVNqcL+fO86xsnXSRX9iw6e8
z+2bJY0OrYaaKqF/O+2Tfe7R1m2/LGk76HL3G9t5+re1Zh7SB//urk88TxkP
uhPnU8yzI/5y1mH/LOlraFZPZ0mnQmejdo61ropoX6pdzjqk5qu6zgBtdLni
PquONV/NOBk/3tqj3mpbn89o32ecZaylgVnSEtH3qLEWrlnUdWpa51cZW0nn
nmFuySE1P8i5k/RB/+UzQq2Vtt6oF+zTrcNW+gzWRid8Nkt6JrrZkCxpof2c
+5v1xpn/Zk0+qk9La7Kxz6LG0EvRbIdmSRdFe6QGy3u+1OS51tsw7e76oBcX
8lmZPtQF+i91W0ObGhjusxo4frm1x5lc5lmPyJJmis5JHV1nvVXWrqv/xZ7j
c1nSW9FC+zq3vvkkt3ze++lzi2vy3Ctck3WoSeqztc96Pkua7+EeszY+VY2T
GuOcr7QeGK9ivQ2whtnLSNdsY04qmM+r9KdO+phzzqu2a1JLo7KksXZxHO2b
mmyhTe1Rq/cawwvaaL+js6Q1o9mOyZJOXcm5d1h79bRbWkudrKtBzuVZxNXI
2MZmSbNGs6UG79S/sTa1RH2im/fTB13+Rp91g+Pj9OnpXNbP13BfYxtvPOjC
L2ZJ+0Y3pj4f1J8aRK+n3l7Kkt49xXHy3N0coqfTC5jgXPI5MUtaN7r0MH06
u9+rtanTrq4zKUsa+iOe6UPW22TtHtZMf896ijba+nPGTz2PcB3qn++6odbY
VO1hnhd76eiZosVzdtzxuQNz/305S1r/QM9lkGc9TXuweX7W82Lvw83naOdS
J9P1GWLOR3suM7KkxaPXz3R8jGcx1jzMsj43mc/HtWdr53/LMdL8dzOf2HOM
Z4S57e1ZzNXuY25ne+7ztPkNAzHPdI/kea75n2+u0OcXZKm3RM9gYZb6B1Ot
k8nmeZFzFzh3uvWzWHuG57LQcyTn9ABYf4k2/YNXstR7WGKuFpvPpcZJT2Kg
n8EO7n2d+Rxlfsjbsiz1JOZ7jvM83+X6rzfnG83bCu1PzfkqbXL4ovlfqf2e
ZzrB3L6qTf/itSz1JtDVObcNxkPOV1oDq7Q/d19/GOci53Iuq7PU76Bn8XqW
ehY7zeda879Gm/4IOdxintdmSdunx7FAm3NZp8+P5merOV/o+pzveuOhn8Ke
xrtH8rbHc9mQpZ4LvRX6J/RR6LlsdL/kbWOWekD0hjY5l34Q+XvNfK7QZ73n
/pvn+0aWekTM5Rw+dk3yv81nHaFNn4I4XzL/K7XH+azxnlch16SfwnntcLyw
dtlcmrvCc1muPcfz2u36jC/zfJdqL/Dcdzn3BG30c3xe8SzoP9A/ou+wVpt1
yP1qz/d1/TmLtY5z1pzbZs+OHgX9JvoF+KyxBrZoz7A29rrmqdr0GqiBH/Tf
6prTrLEPjPMY90svprT+9AuoizetVfoI9LOKOP67NfOb9ixriT7UIWvma31W
O5e9lNGH/gJzf7Wu9mhTb+WcS09hqzGwJj0Belv0BTZpM5ea+sK6WmW9veP4
x9bVHn0O9yiz1EfD3pylfgJ/p17esmbe8DuBdbaEjb5ZyBp81zrcZl3iT01t
t652a1M/O6w5/KmRD62THa5DTeL/mfnfpU1d7fUsi7sm58T6nM+Xniln+JPn
uN+aY33G/27N7NWmNnZZrzxrv/F85DrUWWH9v7R+eNa/rIeD2pzjN57HBfpQ
N/iTw2/N+UHrhrmc53+shwPa1VzzF+vqgPVRRP991sABfQ753H2e+9fWSrV0
PIfPh7PgLDlT6gRNmjP+1vyQq8L6h3m473PYzlKvh7n/Z218o806VfRnfXg4
72bexVc6l3XK5NJv3Thr+jj0O892nN/h0d8poV3W8SL6VNDO+xyrTW+O3+px
Xhc7Xlkfxivrw+/n6E/RA6LHWcPx4/SvqI0PvVF+V4dPMe3Cjp+oD/1Jfj9X
XB/s0/ThWUeakyPdOz7FfC5z+S1dSW16nMw9RZtxep1n5FLf51ht6oSeJL/h
K6IP6xTVPs25pbXzc/FvrH2K46WM5zTXpAeJDz0Qfi9YzXHsu90LZ8dZtNaf
8UaumZ/L7wjhkH21L3C8gv7oEmgUv+jTJ5d6Rtj0I5lLT+eC7M9eJD1O+js3
atNbpGdI75A+HT1D+o70BHs7t555oGdWy3o73rktHafPdYPPrWf9nOSa1An9
P3p/PbXzfcOS2m30b+vZ0eejx1fB2IinpuPE0Mm5+NCTLOH65DAzHvZFb4m+
Uh3H6dPRQ6CXQN8Brk6fr73x02Ojv9bR8Xs9o7Oc21WffJ/uQm36Yxf5rHv0
b2+e6cnRD9poPA3dbyXt57TbmX/Woe9Gb40eW/73kBd6dk+5Zn33frFzK5qH
/O8zKzt3uDZ9N3po9E1re3ZVtQdptzJXZ2qTB/phHcw/c+k5jtTnGvd7qTb9
usv0Gep4B/dO32uDe6Ef1t2zqGZ+2Be9LnorU7X7m3P6ZPTIZhjPfea8hj70
ymq4/pc+i14evTt6e/nfUtKvGmVO6HvR85qsPcL4a2uTE3pgA80b/TN6ZxNz
qQ831jq8zNzOce4Az+4KnzvNuawzyzUHuxd6ePTv9uRSb2yYebvWODdbq+Rk
nv701OinXWcNj3Rfg62lK937s/rMNJ/0yejLrNOm14PGi/ad7wHRA1tmDm/U
XqG90nzW1SZv9M8mmf+bXHONPvn/E1Rfm74AfTL6C6sdn+TeGR9truif0eP4
Qnu6eWukvUs7/3+F6J/Ri3nbeKZ41o2zP3sijV2fHN5mDO9rzzceekLNzG1D
x3kW/Rv0anoNTcwh+jN9r3xfDBstertzt5rPpvp8pr3bM22iD7lt5vh12vQX
0PnpLe1zX9j0BT4wznwfqoG5wqZXlO8T0U9C56fX0Nx9rdFmfXoE+ONDnVT3
83jIueyX7/8+ucRJODv6QOjnP2r/ZA5ba0NasNHeeTfdbU7Q9ls5l/y01edn
7V/cL70K9GHyfLfjaM4dHUffplbRZslVe200W+x8j6aDNvp5G2v7Y220dDRw
fPL9wY7aaNTEgHZNfrpqo5eiy6OdFnUcLXqh+6LHQV+DPke+90HvAT0ZXfpe
bXLbybnoyfigeZLPB7TRuju5Droo42jL5LazNvtC00efRNft5r5O0ybOf1q3
xIaeiT+6LlouWv8V5p99oTmjRXfWLqwP/ryveI/yniLPDzmXHNK3yGu86PXV
zWEP7aral5q3x7TJCbo8uuiZzkUfvkqfmuahpzY6YS/3W9vxOu6d8WvNFfo7
GmYr7bw+/6Q2GiZ2E/OPzo6m2sJ4WnrWffS5Rpv16+nP+uQTLb678aDtouui
Z6Nr32KesdG30a7Qv9Cm0LbRuNGu0ZvRstGrr3ecuWjYaNno0pX1wf8mn1vf
3A7Qh7yhW+V/20w8ef15kPZE7byePES7onOJv71rsk5fffL68GDtR7XzevKz
2p200XvRbtF/O3t2w7S7aXd3L9xtuNf00m5gftBh0WDRX0doP+f47eZ5hP7k
cKTjaLFospXMITovGm9/7ebusb/2UO2O5mGMNtokei66K/l8wTUf8lltrI2h
7pfcjtafvKHzPmOu0HbRdZ/V7mmuxmuP1kbvRWMcZU4GuU7+d9cT9Bmu3cV8
jtImh2i76IEDjOcZ84YWjA6MXjtJ+2FttNxq1ht1OFZ/tNzHXfMJ9z7Z8dna
PcztFG1q9RE/y+R2qjXPuaDnDjO3aLjot2i32Oi0xPyy9svaaKrosujI6LST
XWeK+ZmmzzztwcaPftrHnE93HL1uruNotGi7I8z5LO2N2pvcO1ot2iA6MXrx
GM9rpvGs0udJcztXe4IxjDNX87TRl9BG0bhWOo4GuNBcDdNGV13gftFP0euW
Oo7N98ki576uz1TzuVh7uT6ss9ZxtDtyu0SbfaGNoqehsy3Vnqk933qb495/
0//w/zMqSLrtevPPvtD6trj+NPO8XH++33h31DXPK7I/NTT0r+89I3RYdLBt
2u+Zz1e1d2jn9dhV2mhN6KQfuXfsz83bWsd368/4fsf/7bmgG6I1oU2hV+40
b2u092rntdB12j9o/2gO0SXRjg665iHP6HWf9bb7ZY8H9EenQl9Cx0RrQgtC
c0QXQlfcqP2dNrlCJ+Q3+W9mSXfKae9xLuv0yiUf/pnf8PN7ZnzO0e6dSzoW
Dm97vhuMh38/3zVZ4yhtxjZrf+I58hlhjS2Oo3/h851/Xv0/6+BTyOezJjFu
dl3i+n/nOgZ0
        "]]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "VertexAlias" -> Identity, "CheckOrientation" -> True, 
        "CoplanarityTolerance" -> Automatic, "CheckIntersections" -> 
        Automatic, "BoundaryNesting" -> Automatic, "SeparateBoundaries" -> 
        False, "PropagateMarkers" -> True, "Hash" -> 1026086391931579403}]]}, 
    
    TagBox[GraphicsComplex3DBox[CompressedData["
1:eJx9W3ucT2UaP2M0Ipe5D+N2srot0eJT6TYHhd1Iu5O2YjntVlpmP7amJD7V
IYWVUW0q104qtVJot1JhTqFQcvtUbm3HNWUUYpBhduZ93ufxvt/za/uj+czT
M8957u9z69w/D//DnXUcx1lT8690h/4Zed7ZXu3P10pb1v4Mt+/KrP0ZfFmS
pn5fFLay4OVXKvxw9T8Uvus4Cu6dnp5V+9Mv3XqkyMCP9z+So34uvc8x6cSZ
CxR+NGy6wmc6zgPEj7v5ldUmneBk+8aK/s4n91jwZcRP/NKHH1t0OrxaN6rl
a/DF9azvFvatE6XgJ7h6C+EfPreeKVe8Yeq28hT8hFd03Fr7u/fvynfLTfoN
e28vT8FPvOQtJWdcvWSViR98QXpO0NH44ZOHPy036ARH5+d6KeSK6uTkkd28
xibcO7WS8FGutl2/VHz2O/qV4vO+h7PV313243Yl16dXLDbhcZMJWxT+vPwN
Ct5nSZYl14x7zy838J0vc0kupKPxo/RJy8pNOu7Mn2t/96d+UmniuwPqHaqF
By/c+b0Jd15tVqX+/qbnjpr8hFo/8fnzsk09uBXkh+EDGfkm3Nf68b9ekG3q
x38k45TiB/zZfejIYQUHP4xW36zwE/48xFF8eYfKmnoG/96wSxupv2tzpNCE
B6sGkxxp2wif5epYofh3LtB6YX2uXKt+RvMX5pnwqPVflFxhn2nZJp0gILmi
rg2aWX7SnOIC9eN8SnKFVxY2M/UT3kVyob1CzU9Q7KZZ8mq50F4ByzX4sXom
ftirr+Kf/VngWq4op189Sz86/yTkqtJ54/2y5hY8i/IPyuXpvIH+E/QuPSty
kvEV6byB/hPseFDxh/EVDCW7J/y5fBfhQ3x5O4lONObDFpZ9dXxF+79pacE1
HbekY0tTP96OQ3EtXX/Sim3Kb5+bTnl5/KYNyh/6T1L/PXjeVfDoqRXv18Kd
VYUVCl68l+KnbK2Ku3Bs/zqeSWfUd2lKb+PXqu8znXjFU8p/nB7jVJ5mOs6S
tg3Uz20HSF9sF+cw5f8LXs424dGQxQrfffs0+SXnjV9THkP9BAMpb2B8xfmU
x1A/wXUj1Hvglo1rYcoVdTiQofXZwpTL2znhLEXvoaWFplzuBzofpndrZX43
vITyKtqL8Z30D1pZ9vroCfqZl59n8uO0uIHskH1btslPtG5pltZPlsXPnPPS
a+2C8eV/vs+JnGSc+mNzlD9jfLG9gmOvNDDtErz7hPo90nEhcLZXj3ENTHs5
rUedo+BPf93MlMufM4bsv+WippZcV4+h+N1yUYEpl/d4y/3KvtmTD5n+HDV+
8bh6L44OOG75szPrJ5W3jw6oMv3ZY/1AXvU3fqvgifyj9YN51Tu5j+zB+YHj
ovkNOs7suAi1vTAugq6t06IUdJzRFF9od28lxRfa3ZtCcYr+Ezch/ST0nKb1
A3qOrqW4SOQNfvcPXLPC1DPD3ZG7d5h69rWfB+9ut+Pra8pLGHccF8E3s1ta
fE4gu6P/xGWUxzBOo39RHsM4ddpQvYHvcqTjAt9T9zWqN/BddnWcYj50tT+j
H3rsz+CHQSuKC/RnR+cfzM/BDso/mJ89P3+/0ue1Tmull7n3Zpr6jJdlKLjU
sZ2pjsU6P95MdS/2BeHDuv6B9zTOoboX+wI/9/Zq9d07Nyn91/yj3m+n5FS6
4ndvm2amXeJswvcmDFNyMD77ledmHbTkXXv27lT4Xqd57yj4Rw8csfR89/07
Vd6Y8HOliR/MLqhQ/He7yzH5CYYSfthlbFOTf6+Vpo/8d+97UuUfHb+M704N
KxWdPtOsOHUKbqzvpeJnmNYP8O8taE9/D/TDR9O0HfrVN+lHf3qCvtv4q3QT
P3qG+EF85+LrDyr+p9+i/Ev8+Y7BCu6sO0vlc5/ja//xJl4K+sHLi5U/oz4l
Dwxzm1v8rCE7op8wvtO7bgvLLh/HSv4I8+TwnQ29FHwGxZsVHOUKZl1aX/NZ
x8Jvcj7VY6eHVFnx2HqawvNGF/1cZOD7s784pfCubmPlpUDju8cXFlh6e6/1
t+rv7xx1xKQf/vjZ+qIU9L1BZEe/X/9cUz9OSH4bv90o39RP/Mz0TeUp+A/G
NtlZnkLeeCbxj/xw3AUPj640+Qm1n/gTn8mx5H2U6Nfwk2fps93nKm/Hx/pS
XcB17zVleylvTM6w4O0JP9raLMuCL596oNywu7zX2j/dH6/OsvSc25XmA7Ne
y7XorPir8gO/Z2a+CY+0PyD/Ua+5lJ+Bn6DPzUqe+NAJq35gP0R+pP9tUveE
Wf/7o55XdvK3fWvBA81/eM8l6SZ9T38X9cZ8op6Di5sqflBvTklD8oOdrQos
fY4mftz4Ywse6HyF+dB5heId/dCpoPyAfhvpfIX5MOT80PoOK468dyleML4Y
Py67ynrf4+fJ/92vzi+w8PdTfGE8BsNID/GG8VWW/peTn0Tu7Y6ph5jz0qZq
Sz9R1bTvUumN8f1jLzY1vxuO7/RFUQr9Rzvid1R8gX/GyzrRfAn9uYjiCP3Q
25NOdWedC+qqn9zX6z7LG9y1ngkPfj9K/e49vYryucx56Lvoh9EG4hP1433p
0/xnSUm+ST8eve+k0k9hRoH13bI51IccX5hvfjdg/vtfnGvx37lUyRO/eX+e
CY80/+HkgbkmnXAS6RntG50me2HcxdkDj5h5RupV/Y5g3nO0vOHQG1X9Ivx0
0nz2ezbN4p/lHV10usjgM0U9Q3aCesa5tbOCY5/O8Lj7xI3lKezuXrTyhaIU
/MQvX6X6aLS7U/XJHkUH+76Gp2KFj/4zL3+fijvo+wJNB/v94Psh35p6Fv28
rulAv49+5fS6XP0d+hXDnSm/I7tM70/4PL/qMoXmt+Cf7okVpB/wq7B0zGad
Nyz/DC8nOmh379QJmu/89H2VCQ9HaDpg9/g6bS/t58x/0Ij0zPMQkbdFb9Xv
hMUtOa9mpqIjegY6Yve5ZPdEvIB++LuoH4aHw7tRfwh6lj7xZKGlh3iUthfo
h/H9hhU/m/rBPCD2hTwgeou2qXcR9YNxyvgYp0KnjPzHPTS/uuj/yCV2AbkE
zvhvjKky6aD/MD76j+i5lPSM/OA8TejAPE3kmn9YveN+232Zln4g3gUf4l3g
y6p3K/+5Y1EDk468j02vsPK8d1LLBfmf8eNNj1H8/kLekO9C3hB/KCd+UC7M
h+LPkA/FXs0ovvyMXnVNOvieynfhPRX9az9EOqgfwQf9CD9n+qaClHR0HRIX
pFOdCnUIwxN6vns89UtQBzI+1oEMT7zXmg72EfH6NfQeQR/hrltW34RzXy/v
GtSx8l2oYwWO80bND9Z1gg91HcMT7zLTgTqc8bEOF/pYR2k62I/Id6EfETti
PcN6hj5C7AV9hNgd86qmg3WRfBfqIoYn3i+mA3Ws0IE6Vujge8r6gT5L9Al9
ltDHvQDbC/pN0TP0m0If6xZNB/t69mfs69mfca7F/uxk0jyB+xGmg/2m0IF+
SuIC6k+mg/0m08E+S+pD6CNEP9BHiP9gncB6hrmK6AfmKswPzoWEH+gvxL7Q
Xwg/WK9yHoO5gcgFcwOBY53JcsF8CfXM8yWWC+dvYnfYm8j7BXsTfJfxPcV5
lPAD8yjRM8wPxX9g7sR0cO4kcsGcR+wLcx7xW5hHiX2hH5fvQj/OdHC+ynRw
PsB0cD4g7w703UI/OUcl+rCX4e+mmHuQPmE/JfJC/8j84JyK+cH5sHwX9pIR
ywv7R7Ev7CsdTT/FHF77j72PY/q4j2M6OB9muXA+LPkH5szCZ3JuTHLBfkT0
kJzbExzm9kIf9n0CT87DyV6wpz7TRyfm+cQn7N0k3pPzfOIT9jUiV3K/QHzC
3kroJ+dphA/7X8ZPMW8n/OS83YovnqcxnRTzZ6IDe0PBh/01+xXur8Wv4E4m
5PoK7mQYjvcwDMd7GIHDPFzyGMzDxW9h7xlBHcv7zTPvl70PZblwT810cE8t
+HCnId+FOw3Gx32x6Bn2xUIf9tRCH/bUjI/7TcbHOxChA3cgQgf2ocI/7D2F
f9h7Cv+w15bvwl5b6MMdDvsD3uGIX8Fdk8DhrknowP2S4MP9kvhhcr+p87l9
58P4eOcTQj3Pd3cMx7s7wYd7P+ET7v3ku7BnFz3Dnl3eF9jvi5/Dfl/eF9jr
/VKdLHsouA9kPvE+UOBw98JwvHsRvcEdbNRT12NwB8twvLOKhug+CO7QGB/v
0IQ+3PsJHbhjZHy8YxR+4N6P6eDdqXwX7k4ZjveZTAfvewUf7ntFXrj3Yzp4
HyV+CPdRYke4A5G4hjtY0QPcwTIc7wZFP3A/JnEN92MSR3APLPThHlj0A3ez
/F28wxS9wR2m2B3uT4R/uNMQfuBOQ/iB+7eEXfR9iNCB+xDhB+7WmA7ezQo+
3M0yHO94mQ7egYvfwh240IH7SfFbuOcUOnDPKfLCfZfwA/fkok+4J2c43tEJ
Hbg7knwLd0dS/8B9muQxuE8T/9zVjuqbGcvVHJrnqP5vt9JcWt8FuW8VNiF+
rld5IN52s3V/GF83sVr5Vb03aE/Edw5Ah++Lgh4jFZ7/3ntEh+fJTl+yz9o5
zU14NOlz9f5644qbW99dpuurk80s+s6bn1EftLlbS5OfqNFztB+ekZVv0q/p
76w8IN/t+Yl9V8x3XAuvpD3wjD15JtzRcHfEO44Fv7KE/GvQ/YUmPzV0qN4q
HppnwgPNpz9ikGPxeS7p36us+2y5Qd+r7kN+2vegqtNFn6y3fw5V/a7obYH+
LtjL+9XrOaa8orfuZC9vzuV0h8/0X1qh6reEvG+Q/sMt36wrMuiEGzdtKUpB
J3zkkm+KUuD7My9TeQD5D/97lap3UQ/RuC6qv0A9uINGq7hL6LNyzw8Kf/mA
Hyw+X5xrxTvjB1eQHRP467fVtfB5H6G/i/4WP/HhCfXd4izVV8r91cSX6ph0
xE8eJ7kwLuJZWj8QF+Ea0jPGl6/thX4b9tTxC34YHc6jOdqkRc1NPr2ZmXQ3
OI/yv9jxK7IL5odwJNk3EY/HSf8YFzXxQvOu27pY93LRpEyrH5E7kA9Xk31A
nzX2ornYwd9Yd3FRu9Kdyn9uGbXbhAeTyS5x+8W5lryVe9ScE+m4b28/XZ6C
H0frDelHF9J3UZ/BcaKP8vo9nlVz87joqAV3juh+vfF6+875pkGU31fPrGvp
Z2PvzFR6CzR+dM/hHBMea32iHoKf9Fzt3OUnTLn87sSnO7DDIRPuDZ+9JxUc
8za/L1GHPyo/R/7j9UuPpdJzvLi+mgMn9NCR6KBc3oiBNB/QdOTO6j9EJyHX
2gvVPD/66Q7rDscZSX1oeL2XY8GPdKY9QYMp+SY8ekDPzfLTMky4/xnRdyYP
P1ZkwL0BD+5LBY/uLaY6E/ivsQvtrzt+ctrEDypaqb4M+Yz/nqPqe+TTKyF7
ob/FQwk/QX8/0Ue5oluIf9Sb99IG2pvvprpF7kZGjqJ+PX1ltgn3OrY9x7QX
w2v0SXOgV49lWPB2pd+nqmfCRnvLlN52tU6zvqv5QXiNXLvKU9FfvfI7U/+C
X0H4yH90EfHjHOxn7anjFzco/oLsA/adyd+IT9RPvJvqNKTjdSxW/Hszb88z
6ThLl1N+SKe6lOHBoFvtPQLXOUsIP5xL9afwM27XqypO71+WZuF3oO8i3Ft0
gXoX4qx+5Nf8TiH/vDd5fPpeS5/MZ3UPdT+A/ATOtQqOcoUlxCfqIQ5Jz8hP
tID4RP0n/JP3ROifDEf/4b0k+qeGJ/yZ9YD+xntbrM+ZPvo571XRzxkf/Za/
i37L+Oi3vN+EfCh7H/Rb1g/kQ9n7QP6UPQvkZ9lPwbsj83nIqwa+lQ+FPuRV
hmMelnsDyHsy74U8LN+FfCtwyJNCH/Kw0If8KXxCPSBzMKgHZF8A77vM26FO
kH0Z1AmCD++CwOF9l/k2vKeyX4A64cweyn73hQ68+/JdeN8FH+oW0Q/UY4IP
9YPwA3Wv0IG6VPChLhV9Ql0qdoG6VOSCOlP4hH6B4Vh/Chz6SpmDQX0r/ENd
KvJCHy10oF419GP1uTKHh76S4ViHG/qx+izZ+0BfyXDsZxmOfaXwA32f4EMf
JHxCXybfhbmH4ENfI/ShDxJ8mG/InA3mDDIXgjkDw3FeIfjQp8u8C+YJMk+G
/lrowDxB5njQpwsd6IsFH/pQwYf+UeaW0OeemY/Z8yiRC/6/Nu4v4nZf0zxK
961RdTXBdT/iD3PP9LP/A4fLkO8=
      "], 
      {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       Polygon3DBox[CompressedData["
1:eJxNm3n8ldP2x8/3uRkiUkJyu0pEpiRFCQ2mRBnSqCSVitAkQ2iSVJooTTRq
nksTpVnJkHIlUyS5PxcX3RtluL/1br/Py/3j82q1W3s/a6+9znk++7NOZVs/
cOv9WS6Xe/6IXO4v8WdBgL9jFwrEcO7IwFGBowOFA8cEjg0UCRwXOD5QNHBC
oFigeODEQInASYGTA6cESgZODZQKnBb4a6B04G+B0wNlAmUDZwTKBc4MnBUo
Hzg7cE6gQuDcwHmB8wMXBC4MVAxcFKgUuDhQOXBJoEqgauDSwGWBaoHqgcsD
NQJXBK4MXBWoGagVqB2oE7g6cE3g2sB1gesDdQM3BOoFbgzcFKgfaBC4OXBL
4NbAbYGGgdsDjQKNA00CTQPNAs0DdwRaBFoG7gy0CtwVaB24O9Am0DbQLnBP
oH2gQ6Bj4N7AfYFOgfsDDwQeDHQOdAl0DXQLdA88FOgReDjwSODRwGOBnoHH
A08Engz0CvQO9An0DfQLPOX++gee9jkDAs+Yp4GBQcY+OPCszxwSGGq8wwLD
fc6IwHPu6fnASHM8KvCCf44OjDHGsYFxgfGBFwMvOW9CYKL/Pikw2bWnBKYa
78uBacY4PTDDnM0MzDLe2YE57mluYJ7/Pj+wILDQeBYFFgeWBF4JLA0sCywP
rAisDLwaeM11VgVWG9vrgTXGvDawztjW59L5bwhszKV62RR4I7A5sCXwprnc
Gngr8LZ7fCfwbmBb4L3Adn12BN43/r8HPgjsDHwY2OV+Pwp8HPgk8Gngs8Du
wOeBL8zVHs+N/X5pXOxxb+CrwL7A14F/BP4v8E3gn4FvA98Fvg/8K/BD4MfA
T4H9gX8H/hM4EPg58EvgYOBQ4NfAb4HfA38E/hvgC6kgkAX+EigUOCJwZOCo
wNGBwoFjAscGigSOCxwfKBo4IVAsUDxwYqBE4KTAyYFTAiUDpwZKBU4L/DVQ
OvC3wOmBMoGygTMC5QJnBs4KlA+cHTgnUCFwbuC8wPmBCwIXBioGLgpUClwc
qBy4JFAlUDVwaeCyQLVA9cDlgRqBKwJXBq4K1AzUCtQO1AlcHbgmcG3gusD1
gbqBGwL1AjcGbgrUDzQI3By4JXBr4LZAw8DtgUaBxoEmgaaBZoHmgTsCLQIt
A3cGWgXuCrQO3B1oE2gbaBe4J9A+0CHQMXBv4L6CVBOd4s/7Aw8EHgx0DnQJ
dA10C3QPPOR6PQIPG+MjgUcDjwV6Bh4PPBF4MtDLPfH33vr2CfQN9As8Fejv
Pp4ODAg8ExgYGOS/Dw4869pDAkONfVhguDGOCDxnnp4PjAyMCrwQGO2exgTG
+u/jAuMDLxrPS4EJjk8MTDKOyYEpgamBl41rWmB6QfoMzYg/ZxrXrMBsczMn
MNc/+fs89zHfcfa6ILDQfSwKLDbGJYFXAksdXxZYrv+KwErXfbUg1SnxvRZY
Zc5XB1435jWBtQUpznXmaX1gQ2BjYFPgjYL0fcZ34+awt7jHNwNbjfmtwNuB
dwLvBrYF3gtsD+wIvB/4e+CDwM7Ah4FdgY8CHwc+CXxakDgDHAM+8Fn8fXfg
84LEPeAtcIAv4u97jPPLwN7AV4F9ga8D/yD3gW8C/wx8G/gu8H3gX4EfAj8W
JF4El4An/BR/2R/4d0HiGGVyiZ/0yiXuBAf4T/zbgcDPBYlHwZ3gJ3AVuAfv
YDgVfKmG3/db/a6H/8Cv4EXwFngOfADeBYeBS8C14F3wKLgQ72ve77y7e+cS
P4ELwYvgEPA0OBUcDM4Dp4K7wIXgY/AAuBk8DT4BZ4Ob1col3gWngtPAZ+An
cCM4D9wJvgFPg5vBaeB1cB44zS+x/4OBQwWJ28BD4DFwEngUPAa+1MK5cJ6G
Pguu0s744SqPmTe4WSvXh0fVdy9woSfcS81c4irsBV4EV4M/wLVquy84yVjX
hTfBW+BM8A14D+9f3tH9fQbv6A3GCgfr4F7gZteYE7jNJvcAh3nePcCdRhgf
fGmgccA9pvhv8JNhrguPgofAV+A+Q4wP/rPSZ/BZe9n44FqjjAOOerN7gUvA
h+AJcK3B5o53+jL3MzGXuAmxwsFm6wdHmm6s8Ch4DTzp13jub363wBNG+2y4
ynzjho9NMr/POI/zgF8tcZ9wGLgQ71w4FTwKHsK7hu9e3lXwKDgPHAb+A7+C
e8C1vsglDgA3g/PAMeA5cDZ4CLwLDgbfhmPAT+AAn+cSF4JvwFvgKrzf4XJr
connw6PgVHAPOBL8H47BXQAOD3+Az8OveA/CweBj8Bk4EvwEHgKHhDfCheAt
8Bw4CdwMHgWXgC/BkeAh8A04Ce9f+Ak8hHf62lzinHA2uAc8Cr4B/4HPwBng
V3AhuAfvaLgKfAMOxhcYfOb3wB8F6f0CF+I9Dn+Aa8HH4F1wM7gQXAvOA6eC
n8DB4DxwD3gafAz+AF+Cs8ET4JbwSTgevAvuBG+BI8GLeO/DkeA5cBQ4GzwN
LgRng6fBeXiX8Y7i3QY3g6/CteA8la0NOBK8CI4FR4K3wD/gMHAh3rvwIjgM
/ADuATfiPQ4Hg1/BXeA5cCE4B7wIfgV3gZvB0+BG8C44HjwGfvKUa8Kd4DBw
I7hQc/3hfh1dH15UyTjhYPAcOBncrIF5gCfAm4gfPvOM8cOjehobvKmLMcBD
hvhvcJVHXBdOBSfh8wMX6mF8cCE4Bs/gXT/M+OBdTxgHHLWaexlq7tkP/Afu
xfsdzj/F/cCpBhorHACuxnsZrjTCWOFU8BA4E/z2evcOf3vSZ8Nzxhk33Gyw
+X3QeZwFXKuP++Ruy/ci7w441SL389+C9P3AdwI8ar5rwYVmmS94yxJjgrPB
0+Ae8Ao4D+99+NU09wZ/gG/ADeA4690bL3q4AjwGLjfD/ML94FRwGLgTfAkO
A3eCC8E94EVwIXgFHAw+Bm/hs8n3KpwBDgafhCPxfQuHgavAo/j88j6F18HN
4CFwKnjUYQ0nSzwErgK/glOhgWRZei/znoJTwWHQduBa8CJ0G7gNvAudBz4G
pyqbS9wJLoTOAy/inY4+85dYs5DPg4PB09B84D/wK/SWI7LEnYjtSO2zjRP+
AF+Cg8G70ByOytK6vXKJP8Cj0JrgbPA0NJ+jnct7H04Lv4UfVvF57LdwlrgZ
dhn/zl6OyRJvxD5WG65YJEschtiOyxKHhLMdnyW+BD8pqg/8pIRrneS+ypvz
E5zLeLEscTx4WvEs8UByfqJ2DZ9V0RhKaMNzTsoS72prnNhw3aNdizM62fUL
u+blxlzMf+NMT8kSn2xsPKV8bkltOBJc8tQsnW+pLPHAWsSdJd4IF/1rlvxK
mqsyxlNan6KugU9x/U9x7+X0o2YOc9ssnenpWeKZd/qs0q4Pzy2TpfrhT/5e
xL00Mp6/uS/WLOve4X5n6A9nPsLzIOflssSlWfPMLPFI+NJZWeK0cLnz9aPG
ymeJV2OfrQ2vPidLHLufz2ptbitkid/y3HO1+Y46L0v8Ew7Z13X7WcOMw5/P
z5IGl1+b2udzcUGWuBzPvVC7i/HAnx/Wp7f+fCbg93wuymtTkxX176ZPA/3J
2YW5P+u8uXOpcTg9nwXO8FTPkXHuA9Q/nwW4O5+Li5wLN6ZOK1m3F+t/rvGc
pX9Ffaj5Slni/fBk6v+R/Fztx4yzuudbSruG6xB//vPSxtioh56OV9Z+wrns
hZqn/ju55iVZ4qlwVGrwZOuQz0JN/S/Rrq0P9xzqlnrkXnS1uWJuLcfxOaxv
Z+nuwXiVLN0feIdVdbyVNcM4dUhN3aXdQ5u6olbv8VmXanNfyKznO51LPI2d
y12LOrxB+2HtutbDzdr1PAvuMA2tma7OvcxckR/qsLNzqW3uStytqjmOXd25
3Fku14d7CvXOfayLz22gTf1w1+IzUkObu8kVWbpHjbUexlgnVxond5YKfq4f
9qyHWzPE/LTnflWW7m/cm2pqU6u19Of+VVt/7ip1rAfuPrzcrvZ9f02W7lGj
zD/3rsM9Am3uNddl6f7Gne36LN3ruBOd6dxWxv+S8VTRh3Os6zj3sRuydFfk
LtbZvJHbelm603H3I6/jHCdv3An7exbjzT97/9J8Vjc2au9Gx7lP3uTcZZ4X
628x/xPNM3uZ5x7rOz4pl+5M3LWamcM55pMcTjOfDRyfa84ne6Y36zPd/c4y
57dk6W7JXfFW/bknk/8XzMltxjPfnL9pnhtqb/Vc9nhet2dJZ+FcGvks7rqN
XZN77HjzuUX/8dpNnLvN/K/Tbpqle9lu88kdlhw2077eM11jntnL2+btJudy
js31aWZuV1sDnMMbxnCH4zvNz2JjJodfmNsW2r+6x13mtqX2t57Fa+bzTuPZ
Zx4WmpNW2txb7/JZ3K9bZ+muzb2Y/b3ifjcb5zZz9a75v1ubO36bLN3juBuy
77XuvW2W7trcnduZW+656/T5xDPd7lm3cx3WxOcdn0s8y835PVm6h3Jnb6rN
Oqut1QnW7XLPpX2W7vjc65e6r93W2PvWYTN9dnteTX1WB210APQA7vbc68nr
Ks+as/vA8+2onfd5y/xzJuga3F9WO3en42/9z3l95fi9WdI00C7ucxzNoaXj
1AC18Ln2Lu3p1skhn9VJ+0TvUGgX+5z7qnXF3A+tn4Xas7UXWCeLtUd7pj9b
J9TS986l2Yx2gUZBXheZ2weypIGgUdylzZoPOvdU/Xe45nbt+T530f/UJ1oH
dmftP6xDNA1q7F1rhvrpYpxoHV2ztHf0mW76ozlQOx9ZP8x9z9rers2aH+tD
baPno5dPsebZL+tU9fu8tvWJVoN/d200HOrrWuuwqTY1Rr00sX7w+dQ6pG7R
f6jzh7TreoZHuJemzqU+e2RJz0Fv+cpa3WlNohfh87B2dX32WlePZEkvQlPq
oH2yz9prDd/n+tQ2NUUMR5lbdB7WeTRLGhe61mOO1zTP7OsYa7K48VPL31jn
PR2v4/oHrdvv9fnWzwW604nOPWj9P+54S/2/s66oPXQ2bOrlB2uJGvzBmuR8
0aGomSf0R++idv5rTT7ovojzR9enhlkTnz+syd9d80ntJq5zwDqk7kpZe9Qh
mhvjvbTR/XpnSU9DO6J29lt7fbKky6HRcYZtPVNqcL+fO86xsnXSRX9iw6e8
z+2bJY0OrYaaKqF/O+2Tfe7R1m2/LGk76HL3G9t5+re1Zh7SB//urk88TxkP
uhPnU8yzI/5y1mH/LOlraFZPZ0mnQmejdo61ropoX6pdzjqk5qu6zgBtdLni
PquONV/NOBk/3tqj3mpbn89o32ecZaylgVnSEtH3qLEWrlnUdWpa51cZW0nn
nmFuySE1P8i5k/RB/+UzQq2Vtt6oF+zTrcNW+gzWRid8Nkt6JrrZkCxpof2c
+5v1xpn/Zk0+qk9La7Kxz6LG0EvRbIdmSRdFe6QGy3u+1OS51tsw7e76oBcX
8lmZPtQF+i91W0ObGhjusxo4frm1x5lc5lmPyJJmis5JHV1nvVXWrqv/xZ7j
c1nSW9FC+zq3vvkkt3ze++lzi2vy3Ctck3WoSeqztc96Pkua7+EeszY+VY2T
GuOcr7QeGK9ivQ2whtnLSNdsY04qmM+r9KdO+phzzqu2a1JLo7KksXZxHO2b
mmyhTe1Rq/cawwvaaL+js6Q1o9mOyZJOXcm5d1h79bRbWkudrKtBzuVZxNXI
2MZmSbNGs6UG79S/sTa1RH2im/fTB13+Rp91g+Pj9OnpXNbP13BfYxtvPOjC
L2ZJ+0Y3pj4f1J8aRK+n3l7Kkt49xXHy3N0coqfTC5jgXPI5MUtaN7r0MH06
u9+rtanTrq4zKUsa+iOe6UPW22TtHtZMf896ijba+nPGTz2PcB3qn++6odbY
VO1hnhd76eiZosVzdtzxuQNz/305S1r/QM9lkGc9TXuweX7W82Lvw83naOdS
J9P1GWLOR3suM7KkxaPXz3R8jGcx1jzMsj43mc/HtWdr53/LMdL8dzOf2HOM
Z4S57e1ZzNXuY25ne+7ztPkNAzHPdI/kea75n2+u0OcXZKm3RM9gYZb6B1Ot
k8nmeZFzFzh3uvWzWHuG57LQcyTn9ABYf4k2/YNXstR7WGKuFpvPpcZJT2Kg
n8EO7n2d+Rxlfsjbsiz1JOZ7jvM83+X6rzfnG83bCu1PzfkqbXL4ovlfqf2e
ZzrB3L6qTf/itSz1JtDVObcNxkPOV1oDq7Q/d19/GOci53Iuq7PU76Bn8XqW
ehY7zeda879Gm/4IOdxintdmSdunx7FAm3NZp8+P5merOV/o+pzveuOhn8Ke
xrtH8rbHc9mQpZ4LvRX6J/RR6LlsdL/kbWOWekD0hjY5l34Q+XvNfK7QZ73n
/pvn+0aWekTM5Rw+dk3yv81nHaFNn4I4XzL/K7XH+azxnlch16SfwnntcLyw
dtlcmrvCc1muPcfz2u36jC/zfJdqL/Dcdzn3BG30c3xe8SzoP9A/ou+wVpt1
yP1qz/d1/TmLtY5z1pzbZs+OHgX9JvoF+KyxBrZoz7A29rrmqdr0GqiBH/Tf
6prTrLEPjPMY90svprT+9AuoizetVfoI9LOKOP67NfOb9ixriT7UIWvma31W
O5e9lNGH/gJzf7Wu9mhTb+WcS09hqzGwJj0Belv0BTZpM5ea+sK6WmW9veP4
x9bVHn0O9yiz1EfD3pylfgJ/p17esmbe8DuBdbaEjb5ZyBp81zrcZl3iT01t
t652a1M/O6w5/KmRD62THa5DTeL/mfnfpU1d7fUsi7sm58T6nM+Xniln+JPn
uN+aY33G/27N7NWmNnZZrzxrv/F85DrUWWH9v7R+eNa/rIeD2pzjN57HBfpQ
N/iTw2/N+UHrhrmc53+shwPa1VzzF+vqgPVRRP991sABfQ753H2e+9fWSrV0
PIfPh7PgLDlT6gRNmjP+1vyQq8L6h3m473PYzlKvh7n/Z218o806VfRnfXg4
72bexVc6l3XK5NJv3Thr+jj0O892nN/h0d8poV3W8SL6VNDO+xyrTW+O3+px
Xhc7Xlkfxivrw+/n6E/RA6LHWcPx4/SvqI0PvVF+V4dPMe3Cjp+oD/1Jfj9X
XB/s0/ThWUeakyPdOz7FfC5z+S1dSW16nMw9RZtxep1n5FLf51ht6oSeJL/h
K6IP6xTVPs25pbXzc/FvrH2K46WM5zTXpAeJDz0Qfi9YzXHsu90LZ8dZtNaf
8UaumZ/L7wjhkH21L3C8gv7oEmgUv+jTJ5d6Rtj0I5lLT+eC7M9eJD1O+js3
atNbpGdI75A+HT1D+o70BHs7t555oGdWy3o73rktHafPdYPPrWf9nOSa1An9
P3p/PbXzfcOS2m30b+vZ0eejx1fB2IinpuPE0Mm5+NCTLOH65DAzHvZFb4m+
Uh3H6dPRQ6CXQN8Brk6fr73x02Ojv9bR8Xs9o7Oc21WffJ/uQm36Yxf5rHv0
b2+e6cnRD9poPA3dbyXt57TbmX/Woe9Gb40eW/73kBd6dk+5Zn33frFzK5qH
/O8zKzt3uDZ9N3po9E1re3ZVtQdptzJXZ2qTB/phHcw/c+k5jtTnGvd7qTb9
usv0Gep4B/dO32uDe6Ef1t2zqGZ+2Be9LnorU7X7m3P6ZPTIZhjPfea8hj70
ymq4/pc+i14evTt6e/nfUtKvGmVO6HvR85qsPcL4a2uTE3pgA80b/TN6ZxNz
qQ831jq8zNzOce4Az+4KnzvNuawzyzUHuxd6ePTv9uRSb2yYebvWODdbq+Rk
nv701OinXWcNj3Rfg62lK937s/rMNJ/0yejLrNOm14PGi/ad7wHRA1tmDm/U
XqG90nzW1SZv9M8mmf+bXHONPvn/E1Rfm74AfTL6C6sdn+TeGR9truif0eP4
Qnu6eWukvUs7/3+F6J/Ri3nbeKZ41o2zP3sijV2fHN5mDO9rzzceekLNzG1D
x3kW/Rv0anoNTcwh+jN9r3xfDBstertzt5rPpvp8pr3bM22iD7lt5vh12vQX
0PnpLe1zX9j0BT4wznwfqoG5wqZXlO8T0U9C56fX0Nx9rdFmfXoE+ONDnVT3
83jIueyX7/8+ucRJODv6QOjnP2r/ZA5ba0NasNHeeTfdbU7Q9ls5l/y01edn
7V/cL70K9GHyfLfjaM4dHUffplbRZslVe200W+x8j6aDNvp5G2v7Y220dDRw
fPL9wY7aaNTEgHZNfrpqo5eiy6OdFnUcLXqh+6LHQV+DPke+90HvAT0ZXfpe
bXLbybnoyfigeZLPB7TRuju5Droo42jL5LazNvtC00efRNft5r5O0ybOf1q3
xIaeiT+6LlouWv8V5p99oTmjRXfWLqwP/ryveI/yniLPDzmXHNK3yGu86PXV
zWEP7aral5q3x7TJCbo8uuiZzkUfvkqfmuahpzY6YS/3W9vxOu6d8WvNFfo7
GmYr7bw+/6Q2GiZ2E/OPzo6m2sJ4WnrWffS5Rpv16+nP+uQTLb678aDtouui
Z6Nr32KesdG30a7Qv9Cm0LbRuNGu0ZvRstGrr3ecuWjYaNno0pX1wf8mn1vf
3A7Qh7yhW+V/20w8ef15kPZE7byePES7onOJv71rsk5fffL68GDtR7XzevKz
2p200XvRbtF/O3t2w7S7aXd3L9xtuNf00m5gftBh0WDRX0doP+f47eZ5hP7k
cKTjaLFospXMITovGm9/7ebusb/2UO2O5mGMNtokei66K/l8wTUf8lltrI2h
7pfcjtafvKHzPmOu0HbRdZ/V7mmuxmuP1kbvRWMcZU4GuU7+d9cT9Bmu3cV8
jtImh2i76IEDjOcZ84YWjA6MXjtJ+2FttNxq1ht1OFZ/tNzHXfMJ9z7Z8dna
PcztFG1q9RE/y+R2qjXPuaDnDjO3aLjot2i32Oi0xPyy9svaaKrosujI6LST
XWeK+ZmmzzztwcaPftrHnE93HL1uruNotGi7I8z5LO2N2pvcO1ot2iA6MXrx
GM9rpvGs0udJcztXe4IxjDNX87TRl9BG0bhWOo4GuNBcDdNGV13gftFP0euW
Oo7N98ki576uz1TzuVh7uT6ss9ZxtDtyu0SbfaGNoqehsy3Vnqk933qb495/
0//w/zMqSLrtevPPvtD6trj+NPO8XH++33h31DXPK7I/NTT0r+89I3RYdLBt
2u+Zz1e1d2jn9dhV2mhN6KQfuXfsz83bWsd368/4fsf/7bmgG6I1oU2hV+40
b2u092rntdB12j9o/2gO0SXRjg665iHP6HWf9bb7ZY8H9EenQl9Cx0RrQgtC
c0QXQlfcqP2dNrlCJ+Q3+W9mSXfKae9xLuv0yiUf/pnf8PN7ZnzO0e6dSzoW
Dm97vhuMh38/3zVZ4yhtxjZrf+I58hlhjS2Oo3/h851/Xv0/6+BTyOezJjFu
dl3i+n/nOgZ0
        "]]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  Boxed->False,
  DefaultBaseStyle->{
   "Graphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  Lighting->{{"Ambient", 
     GrayLevel[0.45]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{2, 0, 2}]}, {"Directional", 
     GrayLevel[0.33], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{0, 2, 2}]}},
  Method->{"ShrinkWrap" -> True}]], "Output",
 CellChangeTimes->{{3.668362212241228*^9, 3.6683622250796165`*^9}, {
  3.6684237291314144`*^9, 
  3.668423765338086*^9}},ExpressionUUID->"cb1f88f9-dc95-4142-bd4d-\
7792f731099c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sending a Mesh to Rhino", "Subsection",
 CellChangeTimes->{{3.6683623343694816`*^9, 
  3.668362340110134*^9}},ExpressionUUID->"e1857265-83a0-4c82-99ec-\
fca44ab2d01f"],

Cell["\<\
The ToRhino utility does the inverse of FromRhino: it attempts to create a \
Rhino object from a Wolfram Language object.\
\>", "Text",
 CellChangeTimes->{{3.668362350312273*^9, 
  3.6683623835704536`*^9}},ExpressionUUID->"e7fa0069-b52a-427b-bb6c-\
492579b18232"],

Cell[TextData[{
 "Here\[CloseCurlyQuote]s a Wolfram Language mesh object. \
It\[CloseCurlyQuote]s a mesh of a ",
 StyleBox["shell",
  FontSlant->"Italic"],
 ", not a ",
 StyleBox["solid",
  FontSlant->"Italic"],
 ", which is important if you intend to send the object to Rhino to create a \
solid:"
}], "Text",
 CellChangeTimes->{{3.6683624219449778`*^9, 3.668362432692978*^9}, {
  3.6683629002876053`*^9, 3.6683629403937297`*^9}, {3.668423793526563*^9, 
  3.6684237979256506`*^9}},ExpressionUUID->"ebd6cd0d-8db9-4993-82a8-\
116ad1ac24bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wlMesh", " ", "=", " ", 
  RowBox[{"BoundaryMesh", "[", 
   RowBox[{"DiscretizeRegion", "[", 
    RowBox[{
     RowBox[{"Ball", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "2"}], "]"}], ",", 
     RowBox[{"2", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.668362574211257*^9, 3.6683625775651493`*^9}, {
  3.6683628204493647`*^9, 3.668362827718732*^9}, {3.668423860791319*^9, 
  3.6684238747995806`*^9}},ExpressionUUID->"c5454279-42a4-4974-afe4-\
28b60a078513"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     BoundaryMeshRegion[CompressedData["
1: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
/wIoOuib
      "], {
       Polygon[CompressedData["
1:eJxN3Af8v2P1P/D7ft9ve6ZQ9tcO2YqQvUc2Ze+Zlb1HWpKfljIySvQvfohS
GlYSDbIpKylJEyXF/3p+z+v98PNwvte47/f9vq/rOud1Xudc1/szZa/Dtjl0
1LX/Zui6oRVbN/ldk5n6rjuiXTixlZ9Ttr4Vm6zc5OHW9/0m30yp/bF2zw/a
tbc1ubnJ9E2ma3Jqu/aBdu2jTd7b5NYm67Yv+lee7Ts+2+Ssdu9GTT7W5H+7
uvbjJue3+jtbuXeTNdp9hzQ5ssnmTbZoclCTd7RrZzQ5M+VOo6qfmPs+3+Sf
7Tn/avJKk1832aBdXz+ivnK758ZWPt7ksnZ9nr6e6zmPtvbBrbw8on5hu/+m
Vi7mfd3b2pc3ebTJ/zT5aes7r5W/aeXvmpwSUd+99e/ZZKMmp41qrldqMmuT
G9vztmvlMa38b5un15sMTfp23y+avNGu3dXa7xt33TOt/at23/1Nftnk5K7W
8KQmv2iyUvq/ax7a577Xync2+XCTtZvs3/qubTJfu+cR69rkwSZvbdeWaLJc
k/+09ofaPV/pq7xoVPUrfbZd+3Zf9/y3yW9bfeFWLtJkUXOYMRqrNXmiyXtS
Vz7ZZNX2mffQkYj6ua1/wfb5Dzc5ssksmZuZ6UtrH97kS6krj4ou/SI6o9Sm
V6s3OSU6Zl0vb/Kzdu3Ivsa3wajm6ojWXjuirn+hNpk/b/J8a7+l3TN7kzea
PJ15eqDJ2u36xU3+2O6Zs33mI03e3+Trrf3D6K33nyljoAMnN7m0q/KU6ANd
pt8fz3zRi9Ob7NGub9Hu/XiTJ5o83uSpJp9o/Xu2co+s/7p9rfVu0T+6t32T
77X+s8x3e8f1m2zV6jO3+2Zk403myLiM733t3jWbXJVS+28Z+9WtvLnJpq2+
cZNNutL5FZq8a1T1d8UGYMT/9IUZZzR5lm402av1HWLNmpzQ6lv1ZUPXN/lS
+9wFTdZr19Y3nia70ydr0dX3bJjv+Ekbx1+b/LnVl2+yVOz8/7X7vt7kKGvT
19ivTvlA5uHeVj7V5PaU2ua8p2/tH1j4llbO3mS7Vl+ldRzWyncHey7qC3/o
+avR9aeyLk92ZTdrR3+2Cj4Y4zSt/Y8mX27yjdbesckX+nq+Z7/YFwbCv827
wlWYenGTJVt93r5wcPEmSzS5oSt8OjuYd0bq+5qHVn65XT+wLxtaPOu8d56x
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
Q2cU8EM88fbMyf3B0F1b/eah4v0Lcs+hwX6fwXtxXn24BY4hT/181s++2zzB
ooNj1y/TwyYL4eVN3jXUb33xOjmN1+LfvMON8QvwGK8VPxye++QpfU7+BG/h
i5wpg6N8ivj0lYzh1divOdgn2M+OxQVndBUbrBr9p/e4rThOPCcOwsnEQvj2
vGnLSe0w1N8qgWswze96nanCf8RhP8ta4572bb5ElzNHdFSMTU5K3zj9L0fo
r30DY5RvWHNcuHFOq6/nTGwrFx1XjKuuXAy2J9csJ8QH8v/4Fd4jPpr85lwb
H7IG9pEXSu5R3lG+QU596+ChPY9ng8/WAE6ukmts1L0L9m/mqs8cag8b12ez
8mNyJatkfs6Mb1s3fXjQU11xITqNK9JxuUUczB6Rc6bGMQrGwTeYN8+4/o7J
ZuPqg31+H319bOWG4LXPixfA3aggb2o+0X3ugQn4/8yxNfkNesRn891Lp71r
rrN9f8fAmVbnqJ3dowN88L7jylmbN3tGS49r7enABdEFuXN1eioOYGu4FE5F
v9kLW3H+2X07RwdwCe/kd9/yItrq8svO0zpXK99sH10fUXdNvGevdEpXe42w
is/eOva6+LhiOLHcnEPVlcdEp9nmbMEHeSxzIVYTy+B9L4S33BkfJPYXE1mH
6zOna2XOX85zFsuzZhjKpl7va52OyTvgZTgYLoa3wjv1+dJeOfbhb4+YH2cN
nQkQL8PXh4OxeN8DsYUpQ8XI9Mb84Sni7mnpVXvGlkOtuWtipWuCb+pwVD4G
38av5Y/lreSP7IXgVzglbomf4kP+hs5Vo+ob0o/74R+4x3Sj0i++HsfH9fFD
+5F45lzj4oTOCjozaD7Xih5elfmnR79jh+3eB4fSu3ubPBvbpYv00Jwenfe3
f33sUL9BwXno5DrjigvFeHiYfNHs48oZLTKu3JUc1hKt/ehQ3GyJlLia3wXz
7/w8DMelcZBvjOrMyuHhn7jnBuGSC4dPOu/yXJOvDhWHWotpx4WBD2edVxsq
1mMXYv4Fo3vuv3qotbOOeNRvh/yuf1S/7bde1gqGwKVX8zy4LrYXe8uLGetT
o6or/T0qe7MWD/buNBSeeA7Oh0/yJxdnrcQHOybHZ1/M+8wQXvdy4kpxvdzC
leGp8vJw8/RxrY01EtvJ2dA3/NNej2tiC7JP+paNTvJx24cD7xCugpusEVv+
RXRfXfnLfI9y4XyHvUe5InV+81vRSTGLWIPP2y26J2duD5KPlSsRs/p7D+4V
58gXTxtfTy/uip7LQ8hh4ze4zT9j1ziMWAyflW/E1/A22I5fynHIb8gN4KnX
DbX3+Zm8h7zMbV1+EzCqvdH1YwvedY/kV/FF/FG+2zzhfdunrk9eHqba08Hv
8L0vZB75clgOg1/NPbAMjoqBYOp/YrvvGEp3+DT2jp/gKXTAPF0Y33ZJ5o0v
XiJ6e2nmw9/5cRba7+MuDP+SR98xOr9l7OQfrb3NUHEBESPoez4cf72U8g6T
+le6atNjdkGvvxPbEZM5W6a+1LiwDcbhGountO9rbp8NtsAiOOQ8hjwp28ff
5MH8jRFziLeJie4Ixv00uvLb4JhnXBXM1PdSnve+iDo/LA6ERduPy75xZmcT
zQEufeK4MGf3cfEbeCQOFANu2MppxvV3PtSV/tYH/RRzwWN8E3/Gd6zLbzMf
/DNfDC/dB4uWzlw7s4f3eMZmeQ49FOttFXvwjrsMtXZsQ65NrIV/whd2snby
b2Td2I7YbKvcI5Zy1uP76V81ffiCuYZp84SvwjT8GV87Pvf7LNu4Nvajzvfy
wWKlPbqK//fqKi+Ml53ela7SWXvI9JXesns5MDkxuVScCp+a9Nmv0n9/cASG
4A30BOd5PYTMPpW6cubEaLiYHIYclTgCFstrqMtZibFwtteCK3w2bNl/KN/k
jArfR3/ptX1e56DxNdiIl/IDcl1yj/JcONwvcw9RHyLvT5978D375HyKa3iA
cyeHJF76Ukrxk/hvyyZHDTV++EgH7AfC0+9nHrbPGryeOdg+YxNHGuuBwRO4
gnfin3jPHcEVcRZOA+dh5rWj+huLbMKz5Adx4zky93Jm1weL8TRcA3aZY88S
096ReecTrYNci7zLkRmPuNb47AvKYfi7db9qsgXeF9uW47g73+d78V3xiX23
3wcnDxvXXtoRmR+68uGhOAz/dLzvGuq83fEpH8jc0xPzf1KTlZqcPK6/KSnv
Yfz0AYfBUXCXXcfFZfzm1t/lwIMWSYkL4cPiWJz4lujS/nkHY3sx76DcfFwY
wNZxEn9PUUxy6rhwwLPwanvz4jUYKk7zDh9I3AXHThvq+8Tt7scfvNuHx8XF
Nk0/GxdH/3dU94rvXacH4gQc+KbwDRgmL3jguGIS/HDFVi7X5N+jyqvDTXVr
eE+w45XYBb72kdgP+52aS+zLl+Im/Ol8GfNW49K9edKG6/D7HVlX67thk1OG
GrtcHk7KP3veA1lTZysXG4rDWm95P1i/QHTrPeFXsPD7wS78aaGufB0u8vs8
Ew7hyjANB+WP7JPjpdpyYvaS5IRwjbcPtYdP1/FkXAu/+ldiEn0rhV/TMXkr
HMl37hMfws8cnXfQ/2r4iXvlhdiyXMst0Un8+vnoBh35Y3ikceKu8r3ycOp/
znpZe2tEF1aMfbnfPr5c1dR9sNi2M0U41T9Tt5clVylnCZu/HdsXr1411Dkr
eOCafnstkzPjbOqSzNvG4+Ks+Ko2W3OdL8OV+Rpjlt+TZ+Bn5PvMxc2p6zsh
/kgfHoP/8Iv0Gb7hWvytGIBuLxV9Zwu3ROfdyy/zyXK2/obP6ulXThOs/3Ls
5LX04Xn/js7jcuz477l3zdTxQFwPfsJO+3zi2uszP/pmT52/syfkd7jW0J6v
eGCtccV5B4yLz7g2iQnxGX0X5v7JXjH+OFcw+c+pX5lr7oXxdHaC83KIuCKs
h3l97I8+0Q980nWEj25cmjq9wDMvzfrZ++TTYYJzozBCjhxPl5/ErZz1cubL
/qkYlo/wDr4b78JtYJR4DO+4LvpwW1d7+beHpy+d9i1Za/xajglfwptwHTkv
MZe/UQtX5ktd+f5xndW2v7Rwchva6sYOgxbMPKwd23op6w2rlxzq3JR8GZ6H
7y0VkePSh/dNFxzEW/FXOuZMibMl7B4G+6w9iz7zv23WQLlyxs8ucDHxy3WZ
G74e98KBxH8bjYtDzhh9o1d0CobNEP1SbhB+MGPq+rZPXcwnboH95lRbXgq/
x/PtdduTkIf6YObIXPG9zgbNNq5+a0x36S3OhqeI+xaL73oibf14jD2wyZ7Y
lOA9/75Y5kvOH082RmfRnEmjS3QKLov9cehNmnxoXBjzwlDrI68ppnGfe9y7
TO73TM+jf8qNgk3sBZ85NDqKzzhHyNfyuYvEZl6P/s6f8R46LnvSR5/lseWV
cS88Y8fM4x+G2j8w3qfzXXgTvIbbe2dsk7FelO/3HuwGL4azuBEbheV83ubx
gXwlHnBM2vrvH4p78Je4CI7EHtiC9eXL+DT9eNOUXFculPqH0+/5D+c7+Gjr
Zc8NB3LOG8fzDBxMfuCsoeK8w+Mv5eh81wl5J++nLqfkNxHK+1LH1/FH/lWu
mr/j93A/343b4iX4yR8yp3Pnc9bLWk32jfCHxbJ+u0av8KpFo5POmUwT++bL
+Vm+Hec8NrpkruWExI5iSHGi8zzsXLz4rlzHOey7wkHn6Z0PMQdiXvMgToYP
9u7kmeUX98tc4U3ij2czb2fFDtklPoZfLZV+czFNMAUn9E7b5XvmzZwvmXsP
jw56J+8jPhQn8pvXhcvhCiuMSwftb2nrh+ti8+diSwQv0mfMcjV8sHOC8vds
DJaL3/8bvaJr88YPsFX5evv5a6X+1tjPiVnL5TP/t6dOD+R45g8n4d/wF37x
k0NxxU3z3i/GzsiK6ftV9P+IcZW4IY6Iv+KfckbmZLfozNcytxumrtwn4zEu
XAq24w/rRG+miX5a85kyzzCPzRwTO8R5j4p+0BP4JzcGz+G1/SRxPU6EP4nT
9dmntH9sL4ZtyaHg0ldnruX+2aDfWbBDWAyTp+4jjyq3wH/BK775gODLHMFN
62A9Dg0OwkO+BdZZly7ze8i45vvPsTXvz/fjeLgA/ION/BmO4EyUtv3GN9L3
09THkTdyHZcV37E5XB1P59PfG93HNfFouHZy9NL6TeUco7ILduXcrvhltdTl
kPxtVrlq/mudzMvGqV+VtYMB8shfz9zJ8RyYZwwpD849z+W+r6fOFo7N/FsH
fv3qrIs545fwXlxcXH5c3sH3eMZfw1luCqcQi3nGTem3h8fGdovNwg59uI46
/gNX6DE8nyWiDuNnil6qmw/5STosF3h13tf7mA9zhFvQycm+JR3lr+Wn7VfI
56kvHt3mB+Ak371JdGvij43f3txGWQf2w/dNPUM0FEfEFXFM72Hs3gtewA05
ATEPzBcDyY3eFfyQZ5DbmSeiX59nzhs9Pyzfoc6n86d46PWpy8VO/R3dUP52
2vS7fm/eA6ayX/7qxWCaftf5AFgCf78Z38Z/0VWxH0wVk8Icvs1z5HbosZiW
P5JjOCr9rj+Q5x6Rtu+cL98Ny8zJpD2pb5V7tc3bfHkH3y+OXyzPPzl4x27Y
j/iTP4Rvchp8uHyNulI+4eG01Z2f2TH3yO0cNa6zNNr63fN4nnP0uPZ6jkrf
EvnM0dEV9j4lmMs3ew9njn4TPVN3XRvPhAUvhGOzh+mDR4dE/x7L/SdFt+mS
vRTxszhabkweTVwtr8Ye+TlYQmfpLh8lD8yn85/2YKbLc9jap2N7JwTLT80a
r5h5xvfvC+dXijPV8aQNM158HcbioTjqhJPq5z/5UTwJL2CzuA0/yKfhQrjx
YpnbxzK/j2Z+J3N7bLCU75JnsL648cLBIjxGbhmXNCfq5kUubdJ3aVe/Ufc7
MfzUmRf+9Cep82Mvpq5vo3wXO98ounVQsBTOwlN8xlryUTgVP4g38TF8zeWx
bXsf/BF+wD+xZxjR5R7X5889kzjTPfAZFzGPYkNcin8g56Zv9bwjLPRu0+T9
YAs/h2PiPvKDbObMrIn5k2PnczdP3bO0cQBxxziyc+5/IZ8dR89hOH5Kh6eP
XsF5ube/JuaD+erGwkeYL3g5dzDzzujqFaM3YxjjxzW2jb3STZhwatYMr7OG
8qyHB1eNEf8zzofyWVhkT5gv49PoNJ59SvBkwfSflrHgnmxl99TZ4sKxx4fz
TPgHI9j0r2PjR8Ve4cSJ0dsDYr+P5f6jYsuP5vqJwQa4gS/gV7tm3Gdmrun2
PbHPU/Muh4zf9L98L13/bnAANiyU94fh4hbcyj7n0anLXfKfMBN24oybpe58
g7/d52/rwCZrTf/w1+Vis/7GAzvytzuV7Ep9m8zrabFf41M/JzhzU2zF8+jC
vXkf74hrykXQuyvCMzaNTtCNjSP8ME4He/BkeEmOTd+m6afz9ASOwTO+a+/x
mzHBSdGVlVLfOzpEl/hCfom/ol981+6pkyPSR5eMlw7xk/Tp2OjUKdG5ebJ+
1o7+/jz1LbJGsPkbiaW2yOf2z7yxMWsgJ8metdXxxwPT516fWS6fU84eWS7r
Znz8JNv//8uy3Sw=
        "]]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "VertexAlias" -> Identity, "CheckOrientation" -> True, 
        "CoplanarityTolerance" -> Automatic, "CheckIntersections" -> 
        Automatic, "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> 
        False, "PropagateMarkers" -> True, "Hash" -> 6467552031077806118}]]}, 
    
    TagBox[GraphicsComplex3DBox[CompressedData["
1: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
/wIoOuib
      "], 
      {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       Polygon3DBox[CompressedData["
1:eJxN3Af8v2P1P/D7ft9ve6ZQ9tcO2YqQvUc2Ze+Zlb1HWpKfljIySvQvfohS
GlYSDbIpKylJEyXF/3p+z+v98PNwvte47/f9vq/rOud1Xudc1/szZa/Dtjl0
1LX/Zui6oRVbN/ldk5n6rjuiXTixlZ9Ttr4Vm6zc5OHW9/0m30yp/bF2zw/a
tbc1ubnJ9E2ma3Jqu/aBdu2jTd7b5NYm67Yv+lee7Ts+2+Ssdu9GTT7W5H+7
uvbjJue3+jtbuXeTNdp9hzQ5ssnmTbZoclCTd7RrZzQ5M+VOo6qfmPs+3+Sf
7Tn/avJKk1832aBdXz+ivnK758ZWPt7ksnZ9nr6e6zmPtvbBrbw8on5hu/+m
Vi7mfd3b2pc3ebTJ/zT5aes7r5W/aeXvmpwSUd+99e/ZZKMmp41qrldqMmuT
G9vztmvlMa38b5un15sMTfp23y+avNGu3dXa7xt33TOt/at23/1Nftnk5K7W
8KQmv2iyUvq/ax7a577Xync2+XCTtZvs3/qubTJfu+cR69rkwSZvbdeWaLJc
k/+09ofaPV/pq7xoVPUrfbZd+3Zf9/y3yW9bfeFWLtJkUXOYMRqrNXmiyXtS
Vz7ZZNX2mffQkYj6ua1/wfb5Dzc5ssksmZuZ6UtrH97kS6krj4ou/SI6o9Sm
V6s3OSU6Zl0vb/Kzdu3Ivsa3wajm6ojWXjuirn+hNpk/b/J8a7+l3TN7kzea
PJ15eqDJ2u36xU3+2O6Zs33mI03e3+Trrf3D6K33nyljoAMnN7m0q/KU6ANd
pt8fz3zRi9Ob7NGub9Hu/XiTJ5o83uSpJp9o/Xu2co+s/7p9rfVu0T+6t32T
77X+s8x3e8f1m2zV6jO3+2Zk403myLiM733t3jWbXJVS+28Z+9WtvLnJpq2+
cZNNutL5FZq8a1T1d8UGYMT/9IUZZzR5lm402av1HWLNmpzQ6lv1ZUPXN/lS
+9wFTdZr19Y3nia70ydr0dX3bJjv+Ekbx1+b/LnVl2+yVOz8/7X7vt7kKGvT
19ivTvlA5uHeVj7V5PaU2ua8p2/tH1j4llbO3mS7Vl+ldRzWyncHey7qC3/o
+avR9aeyLk92ZTdrR3+2Cj4Y4zSt/Y8mX27yjdbesckX+nq+Z7/YFwbCv827
wlWYenGTJVt93r5wcPEmSzS5oSt8OjuYd0bq+5qHVn65XT+wLxtaPOu8d56x
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
Q2cU8EM88fbMyf3B0F1b/eah4v0Lcs+hwX6fwXtxXn24BY4hT/181s++2zzB
ooNj1y/TwyYL4eVN3jXUb33xOjmN1+LfvMON8QvwGK8VPxye++QpfU7+BG/h
i5wpg6N8ivj0lYzh1divOdgn2M+OxQVndBUbrBr9p/e4rThOPCcOwsnEQvj2
vGnLSe0w1N8qgWswze96nanCf8RhP8ta4572bb5ElzNHdFSMTU5K3zj9L0fo
r30DY5RvWHNcuHFOq6/nTGwrFx1XjKuuXAy2J9csJ8QH8v/4Fd4jPpr85lwb
H7IG9pEXSu5R3lG+QU596+ChPY9ng8/WAE6ukmts1L0L9m/mqs8cag8b12ez
8mNyJatkfs6Mb1s3fXjQU11xITqNK9JxuUUczB6Rc6bGMQrGwTeYN8+4/o7J
ZuPqg31+H319bOWG4LXPixfA3aggb2o+0X3ugQn4/8yxNfkNesRn891Lp71r
rrN9f8fAmVbnqJ3dowN88L7jylmbN3tGS49r7enABdEFuXN1eioOYGu4FE5F
v9kLW3H+2X07RwdwCe/kd9/yItrq8svO0zpXK99sH10fUXdNvGevdEpXe42w
is/eOva6+LhiOLHcnEPVlcdEp9nmbMEHeSxzIVYTy+B9L4S33BkfJPYXE1mH
6zOna2XOX85zFsuzZhjKpl7va52OyTvgZTgYLoa3wjv1+dJeOfbhb4+YH2cN
nQkQL8PXh4OxeN8DsYUpQ8XI9Mb84Sni7mnpVXvGlkOtuWtipWuCb+pwVD4G
38av5Y/lreSP7IXgVzglbomf4kP+hs5Vo+ob0o/74R+4x3Sj0i++HsfH9fFD
+5F45lzj4oTOCjozaD7Xih5elfmnR79jh+3eB4fSu3ubPBvbpYv00Jwenfe3
f33sUL9BwXno5DrjigvFeHiYfNHs48oZLTKu3JUc1hKt/ehQ3GyJlLia3wXz
7/w8DMelcZBvjOrMyuHhn7jnBuGSC4dPOu/yXJOvDhWHWotpx4WBD2edVxsq
1mMXYv4Fo3vuv3qotbOOeNRvh/yuf1S/7bde1gqGwKVX8zy4LrYXe8uLGetT
o6or/T0qe7MWD/buNBSeeA7Oh0/yJxdnrcQHOybHZ1/M+8wQXvdy4kpxvdzC
leGp8vJw8/RxrY01EtvJ2dA3/NNej2tiC7JP+paNTvJx24cD7xCugpusEVv+
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
Znz8JNv//8uy3Sw=
        "]]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  Boxed->False,
  DefaultBaseStyle->{
   "Graphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  Lighting->{{"Ambient", 
     GrayLevel[0.45]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{2, 0, 2}]}, {"Directional", 
     GrayLevel[0.33], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{0, 2, 2}]}},
  Method->{
   "SeparateBoundaries" -> "Simple", "EliminateUnusedCoordinates" -> 
    True}]], "Output",
 CellChangeTimes->{
  3.6683625796554823`*^9, 3.6683628302770495`*^9, 3.668365595195158*^9, {
   3.6684238671714735`*^9, 
   3.6684238762191257`*^9}},ExpressionUUID->"31ffb585-789d-41ed-9c98-\
5b8aa75343c5"]
}, Open  ]],

Cell[TextData[{
 "To get the mesh object out of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " and into Rhino, first convert it to a Rhino mesh:"
}], "Text",
 CellChangeTimes->{{3.6683623870023217`*^9, 3.668362408950678*^9}, {
  3.6683626191690702`*^9, 3.668362623412162*^9}, {3.668362945822321*^9, 
  3.668362963371646*^9}},ExpressionUUID->"9f1cef78-e9ee-4a7e-a807-\
5f0f549af517"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rhinoMesh", " ", "=", 
  RowBox[{"ToRhino", "[", "wlMesh", "]"}]}]], "Input",
 CellChangeTimes->{{3.6683624146912565`*^9, 3.6683624172651577`*^9}, {
  3.6683625835397577`*^9, 
  3.66836258722124*^9}},ExpressionUUID->"ebe76044-258e-4e5a-adea-\
397da71169b5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"NETObject", "[", 
    RowBox[{"Rhino", ".", "Geometry", ".", "Mesh"}], "]"}], 
   "\[RightGuillemet]"}],
  NETLink`Objects`NETObject$440221481041921]], "Output",
 CellChangeTimes->{3.6683625885159984`*^9, 3.6683628341145267`*^9, 
  3.668365605053979*^9, 3.668365866329965*^9, 
  3.668423881023741*^9},ExpressionUUID->"5ab4f649-56bf-431f-ba1e-\
33440a310934"]
}, Open  ]],

Cell["Add the object to the Rhino document\[CloseCurlyQuote]s object table:", \
"Text",
 CellChangeTimes->{{3.668362973511274*^9, 
  3.668362986755249*^9}},ExpressionUUID->"7b687eb8-c2f2-416c-8685-\
35d25e34318d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doc", "@", 
  RowBox[{"Objects", "@", 
   RowBox[{"Add", "[", "rhinoMesh", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6683627448229885`*^9, 
  3.6683627462737417`*^9}},ExpressionUUID->"7687d06b-2acf-4f99-8cb8-\
562a97f71d04"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\[LeftGuillemet]", 
   RowBox[{"NETObject", "[", 
    RowBox[{"System", ".", "Guid"}], "]"}], "\[RightGuillemet]"}],
  NETLink`Objects`NETObject$865202052530177]], "Output",
 CellChangeTimes->{3.6683627497212315`*^9, 3.668362836470051*^9, 
  3.668365634802186*^9},ExpressionUUID->"f955c4eb-daba-484e-a3b3-\
48f2c4d55e1a"]
}, Open  ]],

Cell["\<\
Tell the document to redraw so the newly-added object is visible:\
\>", "Text",
 CellChangeTimes->{{3.668362994243009*^9, 
  3.6683630120108395`*^9}},ExpressionUUID->"43e665ec-7ee6-4ca6-a685-\
8b1e130c7925"],

Cell[BoxData[
 RowBox[{"doc", "@", 
  RowBox[{"Views", "@", 
   RowBox[{"Redraw", "[", "]"}]}]}]], "Input",ExpressionUUID->"83d66271-2c6b-\
4e25-84b8-5b9d02a55767"],

Cell["\<\
In fact, there is also a utility RhinoShow to add and draw an object, so the \
preceding code can be expressed more succinctly. The function returns a \
unique id for the object:\
\>", "Text",
 CellChangeTimes->{{3.668365660416565*^9, 
  3.6683657679904814`*^9}},ExpressionUUID->"bda24453-0751-474f-ae5e-\
70a4afbd37b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"guid", "=", 
  RowBox[{"RhinoShow", "[", 
   RowBox[{"ToRhino", "[", "wlMesh", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6683657066534834`*^9, 3.668365745043764*^9}, 
   3.66842393538765*^9},ExpressionUUID->"62a2bd89-81a4-4b6f-bc58-\
fac912b26881"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{"\[LeftGuillemet]", 
    RowBox[{"NETObject", "[", 
     RowBox[{"System", ".", "Guid"}], "]"}], "\[RightGuillemet]"}],
   NETLink`Objects`NETObject$31632985451134977], "}"}]], "Output",
 CellChangeTimes->{3.668365716637163*^9, 3.668365771515946*^9, 
  3.6684238863587356`*^9, 
  3.668423918119114*^9},ExpressionUUID->"1e55a5f6-830d-4cc5-8e0c-\
a2b38cd852f0"]
}, Open  ]],

Cell["\<\
You can remove the object from the document and delete it with RhinoUnshow:\
\>", "Text",
 CellChangeTimes->{{3.668365775384597*^9, 3.668365814445792*^9}, {
  3.668365858436618*^9, 
  3.6683658608233414`*^9}},ExpressionUUID->"c8518116-e04d-40c1-81f6-\
cd02d0384245"],

Cell[BoxData[
 RowBox[{"RhinoUnshow", "[", "guid", "]"}]], "Input",
 CellChangeTimes->{{3.6683658472361517`*^9, 
  3.6683658523216143`*^9}},ExpressionUUID->"261886df-fecf-42a9-819d-\
ec009036c4f2"],

Cell["Put the object back for the next step:", "Text",
 CellChangeTimes->{{3.6684240222455893`*^9, 
  3.6684240291250134`*^9}},ExpressionUUID->"22a2d67a-869c-46af-960f-\
e03925e1d071"],

Cell[BoxData[
 RowBox[{"guid", "=", 
  RowBox[{"RhinoShow", "[", 
   RowBox[{"ToRhino", "[", "wlMesh", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6683657066534834`*^9, 3.668365745043764*^9}, 
   3.66842393538765*^9},ExpressionUUID->"8cf45822-121b-49dc-9fae-\
325e61736ce0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["RhinoApp`RunScript", "Subsection",
 CellChangeTimes->{{3.6683632578117766`*^9, 
  3.66836326581432*^9}},ExpressionUUID->"6ed6853d-05da-4fdb-8c54-\
86fb84d81de6"],

Cell["\<\
A very useful (and slow) command for executing arbitrary Rhino commands is \
RunScript. It\[CloseCurlyQuote]s useful here.\
\>", "Text",
 CellChangeTimes->{{3.668363273395677*^9, 
  3.6683633310826263`*^9}},ExpressionUUID->"8d51ea06-1438-45ad-b993-\
37cb1467267e"],

Cell["First load the definition:", "Text",
 CellChangeTimes->{{3.668426389335105*^9, 
  3.668426394248947*^9}},ExpressionUUID->"d187e9f2-d7c4-4604-a6e8-\
73259c514c5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LoadNETType", "[", "\"\<Rhino.RhinoApp\>\"", "]"}], ";"}]], "Input",\

 CellChangeTimes->{{3.6684263686038113`*^9, 3.6684263686038113`*^9}, {
  3.6684265087696037`*^9, 
  3.6684265098772106`*^9}},ExpressionUUID->"7b9fb794-3ada-4c31-ab43-\
53f27d292981"],

Cell["\<\
The mesh doesn\[CloseCurlyQuote]t have surface normals, so its corners appear \
rounded if the view is rendered as a shaded model:\
\>", "Text",
 CellChangeTimes->{{3.6683630277663345`*^9, 3.6683630947034044`*^9}, {
  3.668363335247666*^9, 
  3.6683633428757725`*^9}},ExpressionUUID->"604744b8-0fa6-495c-acd6-\
679caa3f7387"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhinoApp`RunScript", "[", 
  RowBox[{
  "\"\<_SetDisplayMode _Viewport=All \\\"Shaded\\\" \>\"", ",", "True"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.668363181655018*^9, 3.668363191841491*^9}, {
   3.6683632229468937`*^9, 3.6683632267843714`*^9}, {3.6683637822347975`*^9, 
   3.668363801266065*^9}, 3.6683644329285464`*^9, {3.668424103151911*^9, 
   3.668424129218217*^9}, 
   3.6684265928222513`*^9},ExpressionUUID->"6ffbfe81-c983-44cc-9da2-\
2e77cad66b43"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6683637839351315`*^9, 3.668363802514017*^9}, 
   3.6683644346444693`*^9, {3.6684240598474207`*^9, 3.6684240757122145`*^9}, {
   3.668424108845661*^9, 3.668424130169768*^9}, 3.668424195390806*^9, 
   3.668426374063496*^9, {3.6684265965661793`*^9, 
   3.6684266255192223`*^9}},ExpressionUUID->"8e523532-6f20-4968-9a23-\
789d91b8bf75"]
}, Open  ]],

Cell["\<\
(There appears to be a bug here; you may have to evaluate the expression \
multiple times to set the display mode of all objects in all viewports.)\
\>", "Text",
 CellChangeTimes->{{3.668426688340437*^9, 
  3.6684267351086373`*^9}},ExpressionUUID->"1b87b704-df49-4cd0-b9fe-\
cebe94393994"],

Cell["\<\
Render it as a wireframe to eliminate the misleading shading:\
\>", "Text",
 CellChangeTimes->{{3.6683633476179905`*^9, 
  3.6683633610802727`*^9}},ExpressionUUID->"ca7d88ea-fa03-453a-9f84-\
ec89306a9654"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhinoApp`RunScript", "[", 
  RowBox[{
  "\"\<_SetDisplayMode _Viewport=All \\\"Wireframe\\\" \>\"", ",", "True"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.668363181655018*^9, 3.668363191841491*^9}, {
   3.6683632229468937`*^9, 3.6683632376884212`*^9}, 3.668364441274172*^9, {
   3.6684241058662143`*^9, 3.6684241338823776`*^9}, {3.6684266020728736`*^9, 
   3.6684266036952424`*^9}},ExpressionUUID->"4af18463-9b3e-4749-91ae-\
45c59e57cb5c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.668363205350658*^9, 3.6683632392015734`*^9, 3.6683644421945305`*^9, 
   3.668364617631173*^9, {3.668424062530552*^9, 3.668424080142501*^9}, {
   3.668424114430175*^9, 3.668424134631139*^9}, 3.6684265522938824`*^9, 
   3.668426605052416*^9, {3.6684266383420963`*^9, 
   3.668426648887426*^9}},ExpressionUUID->"c51c4693-3311-4f27-8c36-\
02059b405600"]
}, Open  ]],

Cell["\<\
RunScript\[CloseCurlyQuote]s first argument is the same thing you\
\[CloseCurlyQuote]d type after the \[OpenCurlyDoubleQuote]Command:\
\[CloseCurlyDoubleQuote] prompt in Rhino. The second argument determines \
whether the command is echoed in Rhino\[CloseCurlyQuote]s command history \
above the \[OpenCurlyDoubleQuote]Command:\[CloseCurlyDoubleQuote] prompt. \
Prefixing Rhino identifiers with an underscore (_) ensures that the \
English-name command will run regardless of what localized language Rhino is \
running in.\
\>", "Text",
 CellChangeTimes->{{3.6683635258901453`*^9, 3.668363580924605*^9}, {
  3.668363815992489*^9, 3.6683638419840884`*^9}, {3.668363921604419*^9, 
  3.66836393509863*^9}, {3.6683639909306717`*^9, 3.6683640289312973`*^9}, {
  3.6683644640023518`*^9, 
  3.6683644667478285`*^9}},ExpressionUUID->"9226981b-de0f-4104-8d75-\
5d84e470790c"],

Cell["\<\
You can do lots of useful things programmatically using RunScript. For \
example, set the standard 4-view arrangement of the document:\
\>", "Text",
 CellChangeTimes->{{3.6683635929050207`*^9, 3.6683636101580677`*^9}, {
  3.668363675893783*^9, 3.668363717512886*^9}, {3.6683644891174574`*^9, 
  3.668364495528852*^9}},ExpressionUUID->"cf9f89f7-3150-409c-8993-\
61995a200a55"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RhinoApp`RunScript", "[", 
   RowBox[{"\"\<_4View\>\"", ",", "True"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.6683636621507998`*^9, {3.6683638049163246`*^9, 3.6683638055559*^9}, {
   3.6684265691575065`*^9, 
   3.668426569641097*^9}},ExpressionUUID->"d9a3afb5-3df9-45f4-93fc-\
15219ec1585b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"RhinoAttach",
WindowSize->{1028, 650},
WindowMargins->{{Automatic, 22}, {Automatic, 3}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 279, 5, 98, "Title",ExpressionUUID->"6e6ba443-4ebe-4e79-9d63-1d834872572c"],
Cell[862, 29, 239, 4, 35, "Text",ExpressionUUID->"0bfb8b2d-4dfd-4914-80c6-a2f2cef0c596"],
Cell[CellGroupData[{
Cell[1126, 37, 154, 3, 67, "Section",ExpressionUUID->"d8131a66-6b41-4630-8fae-8aef994f85c0"],
Cell[1283, 42, 205, 4, 35, "Text",ExpressionUUID->"cd9edec1-7b69-4b9f-860c-ac377446b98f"],
Cell[1491, 48, 241, 4, 35, "Text",ExpressionUUID->"3b7a5fe1-ba33-43c5-97fa-6424712bb412"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1769, 57, 159, 3, 67, "Section",ExpressionUUID->"e703719c-1c4f-4fcb-9298-dcc47dd215ae"],
Cell[CellGroupData[{
Cell[1953, 64, 245, 4, 54, "Subsection",ExpressionUUID->"a8168806-f4d6-45f8-b524-dbe6737b88f7"],
Cell[2201, 70, 453, 9, 58, "Text",ExpressionUUID->"335306c3-77a6-43c4-8834-a59a1ed6f5c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2691, 84, 162, 3, 54, "Subsection",ExpressionUUID->"792c841a-be0f-4bef-89ce-c7550bc7128f"],
Cell[2856, 89, 521, 9, 58, "Text",ExpressionUUID->"5903b529-b953-42d7-9802-8fdb4a14fe1d"],
Cell[3380, 100, 160, 3, 30, "Input",ExpressionUUID->"13eb9711-861b-47e9-b5c0-836248a3efa7"],
Cell[3543, 105, 425, 8, 58, "Text",ExpressionUUID->"750f8c06-5ce0-41d5-b4df-f80f93045da7"],
Cell[CellGroupData[{
Cell[3993, 117, 196, 4, 30, "Input",ExpressionUUID->"60ea30fa-5bad-4314-9c2d-12e590a9f9de"],
Cell[4192, 123, 371, 8, 34, "Output",ExpressionUUID->"f23d5dbd-9b50-4cfb-aac8-ea6c1ab3764c"]
}, Open  ]],
Cell[4578, 134, 441, 8, 58, "Text",ExpressionUUID->"d44f593a-02c3-4120-8cf3-d7bcc9a16e28"],
Cell[CellGroupData[{
Cell[5044, 146, 196, 4, 30, "Input",ExpressionUUID->"26b873d1-a7c2-4576-b6e3-a11a023882e0"],
Cell[5243, 152, 23723, 694, 2383, "Output",ExpressionUUID->"743dd139-4018-49a2-9343-c60c5b483f09"]
}, Open  ]],
Cell[28981, 849, 426, 8, 35, "Text",ExpressionUUID->"4fbde670-cea0-4cce-b7d5-25536e080ef8"],
Cell[CellGroupData[{
Cell[29432, 861, 185, 4, 30, "Input",ExpressionUUID->"fbd5219b-ebf7-40fe-9d1c-dc6c2f7559a0"],
Cell[29620, 867, 446, 10, 34, "Output",ExpressionUUID->"da8ed3d1-9ef3-48bd-bd7f-e7c39930431b"]
}, Open  ]],
Cell[30081, 880, 416, 8, 35, "Text",ExpressionUUID->"41c35d7a-834c-4ea1-b26f-1ecceac64f3b"],
Cell[CellGroupData[{
Cell[30522, 892, 704, 16, 73, "Input",ExpressionUUID->"750603f8-f9bf-484c-8c0f-9f327fb153cc"],
Cell[31229, 910, 350, 9, 34, "Output",ExpressionUUID->"b6e03bbb-f734-40ed-92e5-01489503eebd"]
}, Open  ]],
Cell[31594, 922, 189, 3, 35, "Text",ExpressionUUID->"182a2cdd-3431-40f0-998c-6c17090869ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31820, 930, 185, 3, 54, "Subsection",ExpressionUUID->"ebe98518-6d9c-42e3-84ba-fab58f3bfaa8"],
Cell[32008, 935, 607, 12, 58, "Text",ExpressionUUID->"37ba27fb-6be5-4c00-9e8b-758500dd02c3"],
Cell[CellGroupData[{
Cell[32640, 951, 273, 6, 30, "Input",ExpressionUUID->"8d642c77-3251-48e5-a736-8958cca730ed"],
Cell[32916, 959, 1477, 37, 77, "Output",ExpressionUUID->"3d5930f0-5a45-4169-a582-38b1ecc90a6b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34442, 1002, 185, 3, 54, "Subsection",ExpressionUUID->"76d10529-17f5-472f-9715-177c64f464a1"],
Cell[CellGroupData[{
Cell[34652, 1009, 286, 7, 30, "Input",ExpressionUUID->"55752818-0a0b-4e6e-960c-02933b05ad9f"],
Cell[34941, 1018, 402, 10, 34, "Output",ExpressionUUID->"b4a9a830-9cac-4d3d-a01e-2a6d967c6554"]
}, Open  ]],
Cell[35358, 1031, 178, 3, 35, "Text",ExpressionUUID->"59486632-f438-4978-8e4b-a42159625dc5"],
Cell[CellGroupData[{
Cell[35561, 1038, 233, 5, 30, "Input",ExpressionUUID->"5dea9d7c-1f62-4a65-bf57-f9fdc6969803"],
Cell[35797, 1045, 205, 4, 34, "Output",ExpressionUUID->"7effc41d-6207-4c7b-aa9a-189dbd19b54d"]
}, Open  ]],
Cell[36017, 1052, 325, 7, 58, "Text",ExpressionUUID->"df402dee-108b-4d5f-a675-913dd270cc0b"],
Cell[CellGroupData[{
Cell[36367, 1063, 230, 5, 30, "Input",ExpressionUUID->"55fe47b8-116f-4853-87df-dcf35c43aee9"],
Cell[36600, 1070, 33074, 561, 268, "Output",ExpressionUUID->"cb1f88f9-dc95-4142-bd4d-7792f731099c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69723, 1637, 173, 3, 43, "Subsection",ExpressionUUID->"e1857265-83a0-4c82-99ec-fca44ab2d01f"],
Cell[69899, 1642, 273, 6, 30, "Text",ExpressionUUID->"e7fa0069-b52a-427b-bb6c-492579b18232"],
Cell[70175, 1650, 539, 14, 49, "Text",ExpressionUUID->"ebd6cd0d-8db9-4993-82a8-116ad1ac24bb"],
Cell[CellGroupData[{
Cell[70739, 1668, 792, 22, 31, "Input",ExpressionUUID->"c5454279-42a4-4974-afe4-28b60a078513"],
Cell[71534, 1692, 86085, 1432, 406, "Output",ExpressionUUID->"31ffb585-789d-41ed-9c98-5b8aa75343c5"]
}, Open  ]],
Cell[157634, 3127, 390, 9, 30, "Text",ExpressionUUID->"9f1cef78-e9ee-4a7e-a807-5f0f549af517"],
Cell[CellGroupData[{
Cell[158049, 3140, 281, 6, 31, "Input",ExpressionUUID->"ebe76044-258e-4e5a-adea-397da71169b5"],
Cell[158333, 3148, 435, 10, 31, "Output",ExpressionUUID->"5ab4f649-56bf-431f-ba1e-33440a310934"]
}, Open  ]],
Cell[158783, 3161, 213, 4, 30, "Text",ExpressionUUID->"7b687eb8-c2f2-416c-8685-35d25e34318d"],
Cell[CellGroupData[{
Cell[159021, 3169, 249, 6, 31, "Input",ExpressionUUID->"7687d06b-2acf-4f99-8cb8-562a97f71d04"],
Cell[159273, 3177, 366, 8, 31, "Output",ExpressionUUID->"f955c4eb-daba-484e-a3b3-48f2c4d55e1a"]
}, Open  ]],
Cell[159654, 3188, 217, 5, 30, "Text",ExpressionUUID->"43e665ec-7ee6-4ca6-a685-8b1e130c7925"],
Cell[159874, 3195, 164, 4, 31, "Input",ExpressionUUID->"83d66271-2c6b-4e25-84b8-5b9d02a55767"],
Cell[160041, 3201, 330, 7, 49, "Text",ExpressionUUID->"bda24453-0751-474f-ae5e-70a4afbd37b4"],
Cell[CellGroupData[{
Cell[160396, 3212, 278, 6, 31, "Input",ExpressionUUID->"62a2bd89-81a4-4b6f-bc58-fac912b26881"],
Cell[160677, 3220, 420, 10, 31, "Output",ExpressionUUID->"1e55a5f6-830d-4cc5-8e0c-a2b38cd852f0"]
}, Open  ]],
Cell[161112, 3233, 276, 6, 30, "Text",ExpressionUUID->"c8518116-e04d-40c1-81f6-cd02d0384245"],
Cell[161391, 3241, 197, 4, 31, "Input",ExpressionUUID->"261886df-fecf-42a9-819d-ec009036c4f2"],
Cell[161591, 3247, 184, 3, 30, "Text",ExpressionUUID->"22a2d67a-869c-46af-960f-e03925e1d071"],
Cell[161778, 3252, 278, 6, 31, "Input",ExpressionUUID->"8cf45822-121b-49dc-9fae-325e61736ce0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162093, 3263, 167, 3, 43, "Subsection",ExpressionUUID->"6ed6853d-05da-4fdb-8c54-86fb84d81de6"],
Cell[162263, 3268, 274, 6, 30, "Text",ExpressionUUID->"8d51ea06-1438-45ad-b993-37cb1467267e"],
Cell[162540, 3276, 168, 3, 30, "Text",ExpressionUUID->"d187e9f2-d7c4-4604-a6e8-73259c514c5b"],
Cell[162711, 3281, 288, 7, 31, "Input",ExpressionUUID->"7b9fb794-3ada-4c31-ab43-53f27d292981"],
Cell[163002, 3290, 335, 7, 30, "Text",ExpressionUUID->"604744b8-0fa6-495c-acd6-679caa3f7387"],
Cell[CellGroupData[{
Cell[163362, 3301, 486, 10, 31, "Input",ExpressionUUID->"6ffbfe81-c983-44cc-9da2-2e77cad66b43"],
Cell[163851, 3313, 386, 6, 31, "Output",ExpressionUUID->"8e523532-6f20-4968-9a23-789d91b8bf75"]
}, Open  ]],
Cell[164252, 3322, 299, 6, 30, "Text",ExpressionUUID->"1b87b704-df49-4cd0-b9fe-cebe94393994"],
Cell[164554, 3330, 215, 5, 30, "Text",ExpressionUUID->"ca7d88ea-fa03-453a-9f84-ec89306a9654"],
Cell[CellGroupData[{
Cell[164794, 3339, 465, 9, 31, "Input",ExpressionUUID->"4af18463-9b3e-4749-91ae-45c59e57cb5c"],
Cell[165262, 3350, 405, 7, 31, "Output",ExpressionUUID->"c51c4693-3311-4f27-8c36-02059b405600"]
}, Open  ]],
Cell[165682, 3360, 876, 15, 68, "Text",ExpressionUUID->"9226981b-de0f-4104-8d75-5d84e470790c"],
Cell[166561, 3377, 385, 7, 30, "Text",ExpressionUUID->"cf9f89f7-3150-409c-8993-61995a200a55"],
Cell[166949, 3386, 335, 8, 31, "Input",ExpressionUUID->"d9a3afb5-3df9-45f4-93fc-15219ec1585b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

